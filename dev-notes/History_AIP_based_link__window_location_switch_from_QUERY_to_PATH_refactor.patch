Subject: [PATCH] History AIP based link: window.location switch from QUERY to PATH refactor
---
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/CreateDisposalRule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/CreateDisposalRule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/CreateDisposalRule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/CreateDisposalRule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/CreateDisposalRule.java	
@@ -118,7 +118,7 @@
       BrowserServiceImpl.Util.getInstance().createDisposalRule(disposalRule, new NoAsyncCallback<DisposalRule>() {
         @Override
         public void onSuccess(DisposalRule createdDisposalSchedule) {
-          HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+          HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
         }
 
       });
@@ -127,7 +127,7 @@
 
   @UiHandler("buttonCancel")
   void buttonCancelHandler(ClickEvent e) {
-    HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+    HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseDIP.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseDIP.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseDIP.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseDIP.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseDIP.java	
@@ -153,7 +153,7 @@
     }
 
     private void errorRedirect(AsyncCallback<Widget> callback) {
-      HistoryUtils.newHistory(BrowseTop.RESOLVER);
+      HistoryUtils.newHistory(   BrowseTop.RESOLVER);
       callback.onSuccess(null);
     }
 
@@ -246,7 +246,7 @@
         title = messages.catalogueFileTitle();
         deleteActionImpactHandler = () -> {
           IndexedFile file = (IndexedFile) bundle.getReferrer();
-          HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, file.getAipId(), file.getRepresentationId());
+          HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, file.getAipId(), file.getRepresentationId());
         };
       } else if (referrerBundle instanceof BrowseRepresentationBundle) {
         processor = referredObject -> openReferred(referredObject,
@@ -254,7 +254,7 @@
         title = messages.catalogueRepresentationTitle();
         deleteActionImpactHandler = () -> {
           IndexedRepresentation representation = (IndexedRepresentation) bundle.getReferrer();
-          HistoryUtils.newHistory(BrowseTop.RESOLVER, representation.getAipId());
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER, representation.getAipId());
         };
       } else {
         processor = referredObject -> openReferred(referredObject,
@@ -263,9 +263,9 @@
         deleteActionImpactHandler = () -> {
           IndexedAIP aip = (IndexedAIP) bundle.getReferrer();
           if (StringUtils.isNotBlank(aip.getParentID())) {
-            HistoryUtils.newHistory(BrowseTop.RESOLVER, aip.getParentID());
+            HistoryUtils.newHistory(   BrowseTop.RESOLVER, aip.getParentID());
           } else {
-            HistoryUtils.newHistory(BrowseTop.RESOLVER);
+            HistoryUtils.newHistory(   BrowseTop.RESOLVER);
           }
         };
       }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/PreservationEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/PreservationEvents.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/PreservationEvents.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/PreservationEvents.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/PreservationEvents.java	
@@ -262,7 +262,7 @@
         callback.onSuccess(instance);
       }
     } else {
-      HistoryUtils.newHistory(BrowseTop.RESOLVER);
+      HistoryUtils.newHistory(   BrowseTop.RESOLVER);
       callback.onSuccess(null);
     }
   }
@@ -272,7 +272,7 @@
       callback.onSuccess(this);
     } else {
       instance = new PreservationEvents();
-      HistoryUtils.newHistory(PLANNING_RESOLVER);
+      HistoryUtils.newHistory(   PLANNING_RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateLocalInstanceConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateLocalInstanceConfiguration.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateLocalInstanceConfiguration.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateLocalInstanceConfiguration.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateLocalInstanceConfiguration.java	
@@ -101,7 +101,7 @@
         new NoAsyncCallback<DistributedInstance>() {
           @Override
           public void onSuccess(DistributedInstance distributedInstance) {
-            HistoryUtils.newHistory(LocalInstanceManagement.RESOLVER);
+            HistoryUtils.newHistory(   LocalInstanceManagement.RESOLVER);
           }
         });
     }
@@ -113,6 +113,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(LocalInstanceManagement.RESOLVER);
+    HistoryUtils.newHistory(   LocalInstanceManagement.RESOLVER);
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/DescriptiveMetadataHistory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/DescriptiveMetadataHistory.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/DescriptiveMetadataHistory.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/DescriptiveMetadataHistory.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/DescriptiveMetadataHistory.java	
@@ -98,13 +98,13 @@
                   }
                 });
             } else {
-              HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+              HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
               Toast.showInfo(messages.editDescMetadataLockedTitle(), messages.editDescMetadataLockedText());
             }
           }
         });
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -384,7 +384,7 @@
         @Override
         public void onSuccess(Void result) {
           Toast.showInfo(messages.dialogDone(), messages.versionReverted());
-          HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
         }
       });
   }
@@ -404,7 +404,7 @@
           Toast.showInfo(messages.dialogDone(), messages.versionDeleted());
           refresh();
           if (bundle.getVersions().isEmpty()) {
-            HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+            HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
           }
         }
       });
@@ -442,7 +442,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+    HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
   }
 
   @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowDistributedInstance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowDistributedInstance.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowDistributedInstance.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowDistributedInstance.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowDistributedInstance.java	
@@ -184,7 +184,7 @@
           @Override
           public void onFailure(Throwable caught) {
             callback.onFailure(caught);
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
           }
         });
     }
@@ -192,7 +192,7 @@
 
   @UiHandler("buttonEdit")
   void buttonApplyHandler(ClickEvent e) {
-    HistoryUtils.newHistory(EditDistributedInstance.RESOLVER, distributedInstance.getId());
+    HistoryUtils.newHistory(   EditDistributedInstance.RESOLVER, distributedInstance.getId());
   }
 
   @UiHandler("buttonRemove")
@@ -206,7 +206,7 @@
               new NoAsyncCallback<Void>() {
                 @Override
                 public void onSuccess(Void result) {
-                  HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+                  HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
                 }
               });
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowLocalInstanceConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowLocalInstanceConfiguration.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowLocalInstanceConfiguration.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowLocalInstanceConfiguration.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/ShowLocalInstanceConfiguration.java	
@@ -54,7 +54,7 @@
               localInstance);
             callback.onSuccess(showLocalInstanceConfiguration);
           } else {
-            HistoryUtils.newHistory(CreateLocalInstanceConfiguration.RESOLVER);
+            HistoryUtils.newHistory(   CreateLocalInstanceConfiguration.RESOLVER);
           }
         }
       });
@@ -125,7 +125,7 @@
 
   @UiHandler("buttonEdit")
   void buttonApplyHandler(ClickEvent e) {
-    HistoryUtils.newHistory(EditLocalInstanceConfiguration.RESOLVER);
+    HistoryUtils.newHistory(   EditLocalInstanceConfiguration.RESOLVER);
   }
 
   @UiHandler("buttonSubscribe")
@@ -150,7 +150,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                      HistoryUtils.newHistory(   InternalProcess.RESOLVER);
 
                     }
                   });
@@ -167,7 +167,7 @@
       @Override
       public void onSuccess(Job job) {
         Toast.showInfo("Create Job", "Success");
-        HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+        HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
       }
 
       @Override
@@ -221,7 +221,7 @@
             @Override
             public void onFailure(Throwable caught) {
               AsyncCallbackUtils.defaultFailureTreatment(caught);
-              HistoryUtils.newHistory(InternalProcess.RESOLVER);
+              HistoryUtils.newHistory(   InternalProcess.RESOLVER);
             }
 
             @Override
@@ -234,7 +234,7 @@
 
                 @Override
                 public void onSuccess(final Void nothing) {
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
               });
             }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseFile.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseFile.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseFile.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseFile.java	
@@ -182,7 +182,7 @@
 
     navigationToolbar.withObject(bundle.getFile()).withPermissions(bundle.getAip().getPermissions())
       .withActionImpactHandler(Actionable.ActionImpact.DESTROYED, () -> {
-        HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, bundle.getFile().getAipId(),
+        HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, bundle.getFile().getAipId(),
           bundle.getFile().getRepresentationId());
       }).build();
     navigationToolbar.updateBreadcrumb(bundle);
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRepresentationInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRepresentationInformation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRepresentationInformation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRepresentationInformation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRepresentationInformation.java	
@@ -65,7 +65,7 @@
             }
           });
       } else {
-        HistoryUtils.newHistory(RepresentationInformationNetwork.RESOLVER);
+        HistoryUtils.newHistory(   RepresentationInformationNetwork.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -142,12 +142,12 @@
 
           @Override
           public void onSuccess(Void result) {
-            HistoryUtils.newHistory(ShowRepresentationInformation.RESOLVER, ri.getId());
+            HistoryUtils.newHistory(   ShowRepresentationInformation.RESOLVER, ri.getId());
           }
 
         });
     } else {
-      HistoryUtils.newHistory(ShowRepresentationInformation.RESOLVER, ri.getId());
+      HistoryUtils.newHistory(   ShowRepresentationInformation.RESOLVER, ri.getId());
     }
   }
 
@@ -158,7 +158,7 @@
       new AsyncCallback<Job>() {
         @Override
         public void onFailure(Throwable caught) {
-          HistoryUtils.newHistory(InternalProcess.RESOLVER);
+          HistoryUtils.newHistory(   InternalProcess.RESOLVER);
         }
 
         @Override
@@ -170,7 +170,7 @@
               Timer timer = new Timer() {
                 @Override
                 public void run() {
-                  HistoryUtils.newHistory(RepresentationInformationNetwork.RESOLVER);
+                  HistoryUtils.newHistory(   RepresentationInformationNetwork.RESOLVER);
                 }
               };
 
@@ -179,7 +179,7 @@
 
             @Override
             public void onSuccess(final Void nothing) {
-              HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+              HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
             }
           });
         }
@@ -192,7 +192,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowRepresentationInformation.RESOLVER, ri.getId());
+    HistoryUtils.newHistory(   ShowRepresentationInformation.RESOLVER, ri.getId());
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditDistributedInstance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditDistributedInstance.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditDistributedInstance.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditDistributedInstance.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditDistributedInstance.java	
@@ -118,7 +118,7 @@
               new NoAsyncCallback<DistributedInstance>() {
                 @Override
                 public void onSuccess(DistributedInstance distributedInstance) {
-                  HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+                  HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
                 }
               });
           }
@@ -135,7 +135,7 @@
               new NoAsyncCallback<DistributedInstance>() {
                 @Override
                 public void onSuccess(DistributedInstance distributedInstance) {
-                  HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+                  HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
                 }
               });
           }
@@ -163,7 +163,7 @@
         new NoAsyncCallback<DistributedInstance>() {
           @Override
           public void onSuccess(DistributedInstance distributedInstance) {
-            HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+            HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
           }
         });
     }
@@ -180,7 +180,7 @@
               new NoAsyncCallback<Void>() {
                 @Override
                 public void onSuccess(Void result) {
-                  HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+                  HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
                 }
               });
           }
@@ -194,6 +194,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowDistributedInstance.RESOLVER, distributedInstance.getId());
+    HistoryUtils.newHistory(   ShowDistributedInstance.RESOLVER, distributedInstance.getId());
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJobReport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJobReport.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJobReport.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJobReport.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJobReport.java	
@@ -52,7 +52,7 @@
         String jobReportId = historyTokens.get(0);
         retrieveJobReport(jobReportId, callback);
       } else {
-        HistoryUtils.newHistory(IngestProcess.RESOLVER);
+        HistoryUtils.newHistory(   IngestProcess.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -319,7 +319,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowJob.RESOLVER, jobReport.getJobId());
+    HistoryUtils.newHistory(   ShowJob.RESOLVER, jobReport.getJobId());
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJob.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJob.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJob.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/process/ShowJob.java	
@@ -61,7 +61,6 @@
 import org.roda.wui.client.common.utils.HtmlSnippetUtils;
 import org.roda.wui.client.common.utils.JavascriptUtils;
 import org.roda.wui.client.common.utils.SidebarUtils;
-import org.roda.wui.client.management.Statistics;
 import org.roda.wui.client.management.distributed.ShowDistributedInstance;
 import org.roda.wui.client.process.Process;
 import org.roda.wui.common.client.HistoryResolver;
@@ -124,7 +123,7 @@
           public void onFailure(Throwable caught) {
             if (caught instanceof NotFoundException) {
               Toast.showError(messages.notFoundError(), messages.jobNotFound());
-              HistoryUtils.newHistory(Process.RESOLVER);
+              HistoryUtils.newHistory(   Process.RESOLVER);
             } else {
               AsyncCallbackUtils.defaultFailureTreatment(caught);
             }
@@ -150,7 +149,7 @@
 
         });
       } else {
-        HistoryUtils.newHistory(Process.RESOLVER);
+        HistoryUtils.newHistory(   Process.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -721,7 +720,7 @@
       public void onFailure(Throwable caught) {
         if (caught instanceof NotFoundException) {
           Toast.showError(messages.notFoundError(), messages.jobNotFound());
-          HistoryUtils.newHistory(Process.RESOLVER);
+          HistoryUtils.newHistory(   Process.RESOLVER);
         } else {
           AsyncCallbackUtils.defaultFailureTreatment(caught);
         }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/EditDisposalRule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/EditDisposalRule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/EditDisposalRule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/EditDisposalRule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/EditDisposalRule.java	
@@ -9,7 +9,6 @@
 
 import java.util.List;
 
-import com.google.gwt.event.logical.shared.ValueChangeHandler;
 import org.roda.core.data.v2.ip.disposal.DisposalRule;
 import org.roda.core.data.v2.ip.disposal.DisposalSchedules;
 import org.roda.wui.client.browse.BrowserService;
@@ -160,7 +159,7 @@
         BrowserServiceImpl.Util.getInstance().updateDisposalRule(disposalRule, new NoAsyncCallback<DisposalRule>() {
           @Override
           public void onSuccess(DisposalRule disposalRule) {
-            HistoryUtils.newHistory(ShowDisposalRule.RESOLVER, disposalRule.getId());
+            HistoryUtils.newHistory(   ShowDisposalRule.RESOLVER, disposalRule.getId());
           }
         });
       } else {
@@ -181,13 +180,13 @@
           });
       }
     } else {
-      HistoryUtils.newHistory(ShowDisposalRule.RESOLVER, disposalRule.getId());
+      HistoryUtils.newHistory(   ShowDisposalRule.RESOLVER, disposalRule.getId());
     }
   }
 
   @UiHandler("buttonCancel")
   void buttonCancelHandler(ClickEvent e) {
-    HistoryUtils.newHistory(ShowDisposalRule.RESOLVER, disposalRule.getId());
+    HistoryUtils.newHistory(   ShowDisposalRule.RESOLVER, disposalRule.getId());
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/TransferUpload.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/TransferUpload.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/TransferUpload.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/TransferUpload.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/TransferUpload.java	
@@ -10,31 +10,8 @@
  */
 package org.roda.wui.client.ingest.transfer;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.roda.core.data.common.RodaConstants;
-import org.roda.core.data.v2.ip.TransferredResource;
-import org.roda.wui.client.browse.BrowseTop;
-import org.roda.wui.client.browse.BrowserService;
-import org.roda.wui.client.common.LastSelectedItemsSingleton;
-import org.roda.wui.client.common.TitlePanel;
-import org.roda.wui.client.common.UserLogin;
-import org.roda.wui.client.common.utils.JavascriptUtils;
-import org.roda.wui.common.client.HistoryResolver;
-import org.roda.wui.common.client.tools.HistoryUtils;
-import org.roda.wui.common.client.tools.ListUtils;
-import org.roda.wui.common.client.tools.RestUtils;
-
 import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.event.dom.client.DragLeaveEvent;
-import com.google.gwt.event.dom.client.DragLeaveHandler;
-import com.google.gwt.event.dom.client.DragOverEvent;
-import com.google.gwt.event.dom.client.DragOverHandler;
-import com.google.gwt.event.dom.client.DropEvent;
-import com.google.gwt.event.dom.client.DropHandler;
+import com.google.gwt.event.dom.client.*;
 import com.google.gwt.event.shared.HandlerRegistration;
 import com.google.gwt.i18n.client.LocaleInfo;
 import com.google.gwt.safehtml.shared.SafeHtml;
@@ -47,8 +24,23 @@
 import com.google.gwt.user.client.ui.Composite;
 import com.google.gwt.user.client.ui.HTML;
 import com.google.gwt.user.client.ui.Widget;
-
 import config.i18n.client.ClientMessages;
+import org.roda.core.data.common.RodaConstants;
+import org.roda.core.data.v2.ip.TransferredResource;
+import org.roda.wui.client.browse.BrowseTop;
+import org.roda.wui.client.browse.BrowserService;
+import org.roda.wui.client.common.LastSelectedItemsSingleton;
+import org.roda.wui.client.common.TitlePanel;
+import org.roda.wui.client.common.UserLogin;
+import org.roda.wui.client.common.utils.JavascriptUtils;
+import org.roda.wui.common.client.HistoryResolver;
+import org.roda.wui.common.client.tools.HistoryUtils;
+import org.roda.wui.common.client.tools.ListUtils;
+import org.roda.wui.common.client.tools.RestUtils;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
 
 /**
  * @author Luis Faria <lfaria@keep.pt>
@@ -233,7 +225,7 @@
             }
           });
       } else {
-        HistoryUtils.newHistory(IngestTransfer.RESOLVER);
+        HistoryUtils.newHistory(   IngestTransfer.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -306,9 +298,9 @@
   void buttonDoneHandler(ClickEvent e) {
     if (isIngest) {
       if (resource != null) {
-        HistoryUtils.newHistory(IngestTransfer.RESOLVER, resource.getUUID());
+        HistoryUtils.newHistory(   IngestTransfer.RESOLVER, resource.getUUID());
       } else {
-        HistoryUtils.newHistory(IngestTransfer.RESOLVER);
+        HistoryUtils.newHistory(   IngestTransfer.RESOLVER);
       }
     } else {
       if (folderId != null) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationNetwork.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationNetwork.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationNetwork.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationNetwork.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationNetwork.java	
@@ -131,7 +131,7 @@
           SearchFilters.createFilterFromHistoryTokens(historyTokens));
         callback.onSuccess(this);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/ShowDisposalRule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/ShowDisposalRule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/ShowDisposalRule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/ShowDisposalRule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/ShowDisposalRule.java	
@@ -7,8 +7,15 @@
  */
 package org.roda.wui.client.disposal.rule;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.event.dom.client.ClickHandler;
+import com.google.gwt.safehtml.shared.SafeHtmlUtils;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.ip.disposal.ConditionType;
 import org.roda.core.data.v2.ip.disposal.DisposalRule;
@@ -31,21 +38,7 @@
 import org.roda.wui.common.client.widgets.Toast;
 import org.roda.wui.server.browse.BrowserServiceImpl;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.event.dom.client.ClickHandler;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.safehtml.shared.SafeHtmlUtils;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.HTML;
-import com.google.gwt.user.client.ui.Label;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Tiago Fraga <tfraga@keep.pt>
@@ -162,7 +155,7 @@
     disposalRuleScheduleName.addClickHandler(new ClickHandler() {
       @Override
       public void onClick(ClickEvent clickEvent) {
-        HistoryUtils.newHistory(ShowDisposalSchedule.RESOLVER, disposalRule.getDisposalScheduleId());
+        HistoryUtils.newHistory(   ShowDisposalSchedule.RESOLVER, disposalRule.getDisposalScheduleId());
       }
     });
 
@@ -179,7 +172,7 @@
       condition.addClickHandler(new ClickHandler() {
         @Override
         public void onClick(ClickEvent clickEvent) {
-          HistoryUtils.newHistory(BrowseTop.RESOLVER, disposalRule.getConditionKey());
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER, disposalRule.getConditionKey());
         }
       });
       conditionsPanel.add(condition);
@@ -200,7 +193,7 @@
       editRuleBtn.addClickHandler(new ClickHandler() {
         @Override
         public void onClick(ClickEvent clickEvent) {
-          HistoryUtils.newHistory(EditDisposalRule.RESOLVER, disposalRule.getId());
+          HistoryUtils.newHistory(   EditDisposalRule.RESOLVER, disposalRule.getId());
         }
       });
 
@@ -250,7 +243,7 @@
     Button backBtn = new Button();
     backBtn.setText(messages.backButton());
     backBtn.addStyleName("btn btn-block btn-default btn-times-circle");
-    backBtn.addClickHandler(event -> HistoryUtils.newHistory(DisposalPolicy.RESOLVER));
+    backBtn.addClickHandler(event -> HistoryUtils.newHistory(   DisposalPolicy.RESOLVER));
     buttonsPanel.add(backBtn);
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRisk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRisk.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRisk.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRisk.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRisk.java	
@@ -65,7 +65,7 @@
             }
           });
       } else {
-        HistoryUtils.newHistory(RiskRegister.RESOLVER);
+        HistoryUtils.newHistory(   RiskRegister.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -152,12 +152,12 @@
 
         @Override
         public void onSuccess(Void result) {
-          HistoryUtils.newHistory(ShowRisk.RESOLVER, riskId);
+          HistoryUtils.newHistory(   ShowRisk.RESOLVER, riskId);
         }
 
       });
     } else {
-      HistoryUtils.newHistory(ShowRisk.RESOLVER, risk.getId());
+      HistoryUtils.newHistory(   ShowRisk.RESOLVER, risk.getId());
     }
   }
 
@@ -167,7 +167,7 @@
       new SelectedItemsList<>(Arrays.asList(risk.getUUID()), IndexedRisk.class.getName()), new AsyncCallback<Job>() {
         @Override
         public void onFailure(Throwable caught) {
-          HistoryUtils.newHistory(InternalProcess.RESOLVER);
+          HistoryUtils.newHistory(   InternalProcess.RESOLVER);
         }
 
         @Override
@@ -179,7 +179,7 @@
               Timer timer = new Timer() {
                 @Override
                 public void run() {
-                  HistoryUtils.newHistory(RiskRegister.RESOLVER);
+                  HistoryUtils.newHistory(   RiskRegister.RESOLVER);
                 }
               };
 
@@ -188,7 +188,7 @@
 
             @Override
             public void onSuccess(final Void nothing) {
-              HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+              HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
             }
           });
         }
@@ -201,7 +201,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowRisk.RESOLVER, risk.getId());
+    HistoryUtils.newHistory(   ShowRisk.RESOLVER, risk.getId());
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/IngestTransfer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/IngestTransfer.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/IngestTransfer.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/IngestTransfer.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/transfer/IngestTransfer.java	
@@ -93,12 +93,12 @@
 
                       @Override
                       public void onSuccess(Void result) {
-                        HistoryUtils.newHistory(IngestTransfer.RESOLVER);
+                        HistoryUtils.newHistory(   IngestTransfer.RESOLVER);
                       }
                     });
                 } else {
                   AsyncCallbackUtils.defaultFailureTreatment(caught);
-                  HistoryUtils.newHistory(IngestTransfer.RESOLVER);
+                  HistoryUtils.newHistory(   IngestTransfer.RESOLVER);
                 }
 
                 callback.onSuccess(null);
@@ -188,16 +188,16 @@
     public void onSuccess(Actionable.ActionImpact impact) {
       if (Actionable.ActionImpact.UPDATED.equals(impact)) {
         if (resource != null) {
-          HistoryUtils.newHistory(RESOLVER, resource.getUUID());
+          HistoryUtils.newHistory(   RESOLVER, resource.getUUID());
         } else {
-          HistoryUtils.newHistory(RESOLVER);
+          HistoryUtils.newHistory(   RESOLVER);
         }
       } else if (Actionable.ActionImpact.DESTROYED.equals(impact)) {
         String parentUUID = resource != null ? resource.getParentUUID() : null;
         if (parentUUID != null) {
-          HistoryUtils.newHistory(RESOLVER, parentUUID);
+          HistoryUtils.newHistory(   RESOLVER, parentUUID);
         } else {
-          HistoryUtils.newHistory(RESOLVER);
+          HistoryUtils.newHistory(   RESOLVER);
         }
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRepresentationInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRepresentationInformation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRepresentationInformation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRepresentationInformation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRepresentationInformation.java	
@@ -104,7 +104,7 @@
 
           @Override
           public void onSuccess(RepresentationInformation result) {
-            HistoryUtils.newHistory(ShowRepresentationInformation.RESOLVER, result.getId());
+            HistoryUtils.newHistory(   ShowRepresentationInformation.RESOLVER, result.getId());
           }
 
         });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/OrderDisposalRules.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/OrderDisposalRules.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/OrderDisposalRules.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/OrderDisposalRules.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/rule/OrderDisposalRules.java	
@@ -7,8 +7,16 @@
  */
 package org.roda.wui.client.disposal.rule;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.safehtml.shared.SafeHtmlUtils;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.uibinder.client.UiHandler;
+import com.google.gwt.user.cellview.client.TextColumn;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.ip.disposal.ConditionType;
 import org.roda.core.data.v2.ip.disposal.DisposalRule;
 import org.roda.core.data.v2.ip.disposal.DisposalRules;
@@ -27,22 +35,7 @@
 import org.roda.wui.common.client.widgets.Toast;
 import org.roda.wui.server.browse.BrowserServiceImpl;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.safehtml.shared.SafeHtmlUtils;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.uibinder.client.UiHandler;
-import com.google.gwt.user.cellview.client.TextColumn;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.HTML;
-import com.google.gwt.user.client.ui.Label;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Tiago Fraga <tfraga@keep.pt>
@@ -302,6 +295,6 @@
 
   @UiHandler("buttonCancel")
   void buttonCancelHandler(ClickEvent e) {
-    HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+    HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseTop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseTop.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseTop.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseTop.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseTop.java	
@@ -83,7 +83,7 @@
       } else if (historyTokens.size() == 1) {
         BrowseAIP.getAndRefresh(historyTokens.get(0), callback);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskIncidenceRegister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskIncidenceRegister.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskIncidenceRegister.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskIncidenceRegister.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskIncidenceRegister.java	
@@ -102,7 +102,7 @@
           filter);
         callback.onSuccess(riskIncidences);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -184,7 +184,7 @@
         @Override
         public void onFailure(Throwable caught) {
           AsyncCallbackUtils.defaultFailureTreatment(caught);
-          HistoryUtils.newHistory(BrowseTop.RESOLVER);
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         }
 
         @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRiskIncidence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRiskIncidence.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRiskIncidence.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRiskIncidence.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/EditRiskIncidence.java	
@@ -7,9 +7,17 @@
  */
 package org.roda.wui.client.planning;
 
-import java.util.Arrays;
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.i18n.client.DateTimeFormat;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.uibinder.client.UiHandler;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import com.google.gwt.user.datepicker.client.DateBox;
+import com.google.gwt.user.datepicker.client.DateBox.DefaultFormat;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.exceptions.NotFoundException;
 import org.roda.core.data.v2.risks.IncidenceStatus;
@@ -25,25 +33,8 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.i18n.client.DateTimeFormat;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.uibinder.client.UiHandler;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Anchor;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.Label;
-import com.google.gwt.user.client.ui.ListBox;
-import com.google.gwt.user.client.ui.TextArea;
-import com.google.gwt.user.client.ui.TextBox;
-import com.google.gwt.user.client.ui.Widget;
-import com.google.gwt.user.datepicker.client.DateBox;
-import com.google.gwt.user.datepicker.client.DateBox.DefaultFormat;
-
-import config.i18n.client.ClientMessages;
+import java.util.Arrays;
+import java.util.List;
 
 public class EditRiskIncidence extends Composite {
 
@@ -68,7 +59,7 @@
             }
           });
       } else {
-        HistoryUtils.newHistory(RepresentationInformationNetwork.RESOLVER);
+        HistoryUtils.newHistory(   RepresentationInformationNetwork.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -231,7 +222,7 @@
 
       @Override
       public void onSuccess(Void result) {
-        HistoryUtils.newHistory(ShowRiskIncidence.RESOLVER, incidence.getId());
+        HistoryUtils.newHistory(   ShowRiskIncidence.RESOLVER, incidence.getId());
       }
 
     });
@@ -243,7 +234,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowRiskIncidence.RESOLVER, incidence.getId());
+    HistoryUtils.newHistory(   ShowRiskIncidence.RESOLVER, incidence.getId());
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/preingest/PreIngest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/preingest/PreIngest.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/preingest/PreIngest.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/preingest/PreIngest.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/ingest/preingest/PreIngest.java	
@@ -10,8 +10,9 @@
  */
 package org.roda.wui.client.ingest.preingest;
 
-import java.util.List;
-
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.VerticalPanel;
+import com.google.gwt.user.client.ui.Widget;
 import org.roda.wui.client.common.UserLogin;
 import org.roda.wui.client.ingest.Ingest;
 import org.roda.wui.common.client.HistoryResolver;
@@ -20,9 +21,7 @@
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 import org.roda.wui.common.client.widgets.wcag.WCAGUtilities;
 
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.VerticalPanel;
-import com.google.gwt.user.client.ui.Widget;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -82,7 +81,7 @@
     if (historyTokens.isEmpty()) {
       callback.onSuccess(layout);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/utils/AsyncCallbackUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/utils/AsyncCallbackUtils.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/utils/AsyncCallbackUtils.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/utils/AsyncCallbackUtils.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/utils/AsyncCallbackUtils.java	
@@ -76,14 +76,14 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   if (redirectPath != null) {
-                    HistoryUtils.newHistory(redirectPath);
+                    HistoryUtils.newHistory(   redirectPath);
                   }
                 }
 
                 @Override
                 public void onSuccess(Void result) {
                   if (redirectPath != null) {
-                    HistoryUtils.newHistory(redirectPath);
+                    HistoryUtils.newHistory(   redirectPath);
                   }
                 }
               });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationAssociations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationAssociations.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationAssociations.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationAssociations.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RepresentationInformationAssociations.java	
@@ -55,7 +55,7 @@
         Filter filter = SearchFilters.createFilterFromHistoryTokens(historyTokens);
         callback.onSuccess(new RepresentationInformationAssociations(filter, filterParts));
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -112,7 +112,7 @@
   }
 
   public static SafeHtml getAssociateWithExistingDialogTitle() {
-    List<String> historyTokens = HistoryUtils.getCurrentHistoryPath();
+    List<String> historyTokens = HistoryUtils.getCurrentHistoryPath (   );
     if (historyTokens.size() >= 2) {
       String[] parts = RepresentationInformationUtils.breakFilterIntoParts(historyTokens.get(1));
       return messages.representationInformationAssociatedWith(parts[0], parts[1], parts[2]);
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskRegister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskRegister.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskRegister.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskRegister.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskRegister.java	
@@ -139,7 +139,7 @@
     } else if (historyTokens.size() == 1 && historyTokens.get(0).equals(CreateActionJob.RESOLVER.getHistoryToken())) {
       CreateActionJob.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskHistory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskHistory.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskHistory.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskHistory.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/RiskHistory.java	
@@ -72,7 +72,7 @@
         });
 
       } else {
-        HistoryUtils.newHistory(RiskRegister.RESOLVER);
+        HistoryUtils.newHistory(   RiskRegister.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -202,7 +202,7 @@
       @Override
       public void onSuccess(Void result) {
         Toast.showInfo(messages.dialogDone(), messages.versionReverted());
-        HistoryUtils.newHistory(ShowRisk.RESOLVER, riskId);
+        HistoryUtils.newHistory(   ShowRisk.RESOLVER, riskId);
       }
     });
   }
@@ -221,7 +221,7 @@
         Toast.showInfo(messages.dialogDone(), messages.versionDeleted());
         refresh();
         if (bundle.getVersions().isEmpty()) {
-          HistoryUtils.newHistory(ShowRisk.RESOLVER, riskId);
+          HistoryUtils.newHistory(   ShowRisk.RESOLVER, riskId);
         }
       }
     });
@@ -258,7 +258,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowRisk.RESOLVER, riskId);
+    HistoryUtils.newHistory(   ShowRisk.RESOLVER, riskId);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicy.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicy.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicy.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicy.java	
@@ -141,7 +141,7 @@
 
         @Override
         public void onClick(ClickEvent event) {
-          HistoryUtils.newHistory(CreateDisposalSchedule.RESOLVER);
+          HistoryUtils.newHistory(   CreateDisposalSchedule.RESOLVER);
         }
       });
       panel.add(newDisposalScheduleBtn);
@@ -168,7 +168,7 @@
 
         @Override
         public void onClick(ClickEvent event) {
-          HistoryUtils.newHistory(Disposal.RESOLVER, DisposalPolicy.RESOLVER.getHistoryToken(),
+          HistoryUtils.newHistory(   Disposal.RESOLVER, DisposalPolicy.RESOLVER.getHistoryToken(),
             CreateDisposalHold.RESOLVER.getHistoryToken());
         }
       });
@@ -197,7 +197,7 @@
       createRuleBtn.addClickHandler(new ClickHandler() {
         @Override
         public void onClick(ClickEvent event) {
-          HistoryUtils.newHistory(DisposalPolicy.RESOLVER, CreateDisposalRule.RESOLVER.getHistoryToken());
+          HistoryUtils.newHistory(   DisposalPolicy.RESOLVER, CreateDisposalRule.RESOLVER.getHistoryToken());
         }
       });
       panel.add(createRuleBtn);
@@ -220,7 +220,7 @@
       editRulesOrderBtn.addClickHandler(new ClickHandler() {
         @Override
         public void onClick(ClickEvent event) {
-          HistoryUtils.newHistory(DisposalPolicy.RESOLVER, OrderDisposalRules.RESOLVER.getHistoryToken());
+          HistoryUtils.newHistory(   DisposalPolicy.RESOLVER, OrderDisposalRules.RESOLVER.getHistoryToken());
         }
       });
       panel.add(editRulesOrderBtn);
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/WelcomePortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/WelcomePortal.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/WelcomePortal.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/WelcomePortal.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/WelcomePortal.java	
@@ -80,7 +80,7 @@
       init();
       callback.onSuccess(layout);
     } else {
-      HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+      HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/MainPortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/MainPortal.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/MainPortal.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/MainPortal.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/MainPortal.java	
@@ -10,19 +10,6 @@
  */
 package org.roda.wui.client.portal;
 
-import java.util.List;
-import java.util.Map;
-
-import org.roda.core.data.common.RodaConstants;
-import org.roda.wui.client.browse.BrowserService;
-import org.roda.wui.client.common.resources.MyResources;
-import org.roda.wui.client.common.utils.JavascriptUtils;
-import org.roda.wui.client.main.GAnalyticsTracker;
-import org.roda.wui.client.main.Theme;
-import org.roda.wui.common.client.ClientLogger;
-import org.roda.wui.common.client.tools.ConfigurationManager;
-import org.roda.wui.common.client.tools.HistoryUtils;
-
 import com.google.gwt.core.client.EntryPoint;
 import com.google.gwt.core.client.GWT;
 import com.google.gwt.dom.client.Element;
@@ -36,8 +23,19 @@
 import com.google.gwt.user.client.ui.Composite;
 import com.google.gwt.user.client.ui.RootPanel;
 import com.google.gwt.user.client.ui.Widget;
-
 import config.i18n.client.ClientMessages;
+import org.roda.core.data.common.RodaConstants;
+import org.roda.wui.client.browse.BrowserService;
+import org.roda.wui.client.common.resources.MyResources;
+import org.roda.wui.client.common.utils.JavascriptUtils;
+import org.roda.wui.client.main.GAnalyticsTracker;
+import org.roda.wui.client.main.Theme;
+import org.roda.wui.common.client.ClientLogger;
+import org.roda.wui.common.client.tools.ConfigurationManager;
+import org.roda.wui.common.client.tools.HistoryUtils;
+
+import java.util.List;
+import java.util.Map;
 
 public class MainPortal extends Composite implements EntryPoint {
   private ClientLogger logger = new ClientLogger(getClass().getName());
@@ -117,9 +115,9 @@
   private void onHistoryChanged(String historyToken) {
     if (historyToken.length() == 0) {
       contentPanel.update(WelcomePortal.RESOLVER.getHistoryPath());
-      HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+      HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
     } else {
-      List<String> currentHistoryPath = HistoryUtils.getCurrentHistoryPath();
+      List<String> currentHistoryPath = HistoryUtils.getCurrentHistoryPath (   );
       contentPanel.update(currentHistoryPath);
       GAnalyticsTracker.track(historyToken);
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyRulesPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyRulesPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyRulesPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyRulesPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyRulesPanel.java	
@@ -87,7 +87,7 @@
         if (selectedRule != null) {
           tableRules.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowDisposalRule.RESOLVER.getHistoryPath(), selectedRule.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/ContentPanelPortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/ContentPanelPortal.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/ContentPanelPortal.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/ContentPanelPortal.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/ContentPanelPortal.java	
@@ -95,7 +95,7 @@
     if (foundResolver != null) {
       update(historyTokens, foundResolver);
     } else {
-      HistoryUtils.newHistory(Theme.RESOLVER, "Error404.html");
+      HistoryUtils.newHistory(   Theme.RESOLVER, "Error404.html");
     }
   }
 
@@ -126,12 +126,12 @@
                   new AsyncCallback<Void>() {
                     @Override
                     public void onFailure(Throwable caught) {
-                      HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+                      HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(Void result) {
-                      HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+                      HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
                     }
                   });
               }
@@ -143,7 +143,7 @@
             @Override
             public void onFailure(Throwable caught) {
               if (caught instanceof BadHistoryTokenException) {
-                HistoryUtils.newHistory(Theme.RESOLVER, "Error404.html");
+                HistoryUtils.newHistory(   Theme.RESOLVER, "Error404.html");
               } else {
                 AsyncCallbackUtils.defaultFailureTreatment(caught);
               }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/BrowseAIPPortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/BrowseAIPPortal.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/BrowseAIPPortal.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/BrowseAIPPortal.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/BrowseAIPPortal.java	
@@ -90,7 +90,7 @@
       if (historyTokens.size() == 1) {
         BrowseAIPPortal.getAndRefresh(historyTokens.get(0), callback);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/UserLoginPortal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/UserLoginPortal.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/UserLoginPortal.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/UserLoginPortal.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/portal/UserLoginPortal.java	
@@ -302,13 +302,13 @@
           if (result) {
             UserLoginPortal.getInstance().login();
           } else {
-            HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+            HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
           }
         }
 
         @Override
         public void onFailure(Throwable caught) {
-          HistoryUtils.newHistory(WelcomePortal.RESOLVER);
+          HistoryUtils.newHistory(   WelcomePortal.RESOLVER);
         }
       });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyHoldsPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyHoldsPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyHoldsPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyHoldsPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicyHoldsPanel.java	
@@ -87,7 +87,7 @@
         if (selectedHold != null) {
           tableHolds.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowDisposalHold.RESOLVER.getHistoryPath(), selectedHold.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowPreservationAgent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowPreservationAgent.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowPreservationAgent.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowPreservationAgent.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowPreservationAgent.java	
@@ -10,9 +10,12 @@
  */
 package org.roda.wui.client.planning;
 
-import java.util.Arrays;
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.exceptions.NotFoundException;
 import org.roda.core.data.v2.ip.metadata.IndexedPreservationAgent;
@@ -29,17 +32,8 @@
 import org.roda.wui.common.client.tools.StringUtils;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.Label;
-import com.google.gwt.user.client.ui.SimplePanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.Arrays;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -61,7 +55,7 @@
         ShowPreservationAgent preservationAgents = new ShowPreservationAgent(eventId, agentId);
         callback.onSuccess(preservationAgents);
       } else {
-        HistoryUtils.newHistory(PreservationAgents.RESOLVER);
+        HistoryUtils.newHistory(   PreservationAgents.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -123,7 +117,7 @@
         public void onFailure(Throwable caught) {
           if (caught instanceof NotFoundException) {
             Toast.showError(messages.notFoundError(), messages.couldNotFindPreservationAgent());
-            HistoryUtils.newHistory(ListUtils.concat(PreservationAgents.RESOLVER.getHistoryPath()));
+            HistoryUtils.newHistory(   ListUtils.concat(PreservationAgents.RESOLVER.getHistoryPath()));
           } else {
             AsyncCallbackUtils.defaultFailureTreatment(caught);
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/search/Relation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/search/Relation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/search/Relation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/search/Relation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/search/Relation.java	
@@ -75,7 +75,7 @@
 
   public void resolve(final List<String> historyTokens, final AsyncCallback<Widget> callback) {
     if (historyTokens.isEmpty()) {
-      HistoryUtils.newHistory(Search.RESOLVER);
+      HistoryUtils.newHistory(   Search.RESOLVER);
     } else {
       // #relation/TYPE/key/value/key/value
       List<FilterParameter> params = new ArrayList<>();
@@ -94,15 +94,15 @@
 
           @Override
           public void onFailure(Throwable caught) {
-            HistoryUtils.newHistory(Search.RESOLVER);
+            HistoryUtils.newHistory(   Search.RESOLVER);
           }
 
           @Override
           public void onSuccess(IndexResult<IndexedAIP> result) {
             if (result.getTotalCount() == 1) {
-              HistoryUtils.newHistory(BrowseTop.RESOLVER, result.getResults().get(0).getUUID());
+              HistoryUtils.newHistory(   BrowseTop.RESOLVER, result.getResults().get(0).getUUID());
             } else {
-              HistoryUtils.newHistory(Search.RESOLVER, historyTokens);
+              HistoryUtils.newHistory(   Search.RESOLVER, historyTokens);
             }
           }
         });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRepresentationInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRepresentationInformation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRepresentationInformation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRepresentationInformation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRepresentationInformation.java	
@@ -218,7 +218,7 @@
             history.add(Search.RESOLVER.getHistoryToken());
             history.add(RodaConstants.REPRESENTATION_INFORMATION_TAGS);
             history.add(category);
-            HistoryUtils.newHistory(history);
+            HistoryUtils.newHistory(   history);
           }
         });
         representationInformationTagValue.add(parPanel);
@@ -256,7 +256,7 @@
         @Override
         public void onSuccess(Actionable.ActionImpact result) {
           if (result.equals(Actionable.ActionImpact.DESTROYED)) {
-            HistoryUtils.newHistory(RepresentationInformationNetwork.RESOLVER);
+            HistoryUtils.newHistory(   RepresentationInformationNetwork.RESOLVER);
           }
         }
       });
@@ -552,7 +552,7 @@
           }
         });
     } else {
-      HistoryUtils.newHistory(RepresentationInformationNetwork.RESOLVER);
+      HistoryUtils.newHistory(   RepresentationInformationNetwork.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicySchedulesPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicySchedulesPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicySchedulesPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicySchedulesPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/policy/DisposalPolicySchedulesPanel.java	
@@ -91,7 +91,7 @@
           tableSchedules.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowDisposalSchedule.RESOLVER.getHistoryPath(),
             selectedSchedule.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/search/SearchPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/search/SearchPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/search/SearchPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/search/SearchPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/search/SearchPanel.java	
@@ -322,7 +322,7 @@
         public void onSuccess(String title) {
           savedSearch.setTitle(title);
           String base64String = JavascriptUtils.encodeBase64(codec.encode(savedSearch));
-          HistoryUtils.newHistory(Search.RESOLVER, RodaConstants.SEARCH_WITH_SAVED_HANDLER, base64String);
+          HistoryUtils.newHistory(   Search.RESOLVER, RodaConstants.SEARCH_WITH_SAVED_HANDLER, base64String);
         }
       });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateUser.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateUser.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateUser.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateUser.java	
@@ -120,7 +120,7 @@
 
             @Override
             public void onSuccess(User createdUser) {
-              HistoryUtils.newHistory(MemberManagement.RESOLVER);
+              HistoryUtils.newHistory(   MemberManagement.RESOLVER);
             }
 
           });
@@ -134,7 +134,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(MemberManagement.RESOLVER);
+    HistoryUtils.newHistory(   MemberManagement.RESOLVER);
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowUser.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowUser.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowUser.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowUser.java	
@@ -66,7 +66,7 @@
           }
         });
       } else {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -148,7 +148,7 @@
         @Override
         public void onSuccess(Actionable.ActionImpact result) {
           if (result.equals(Actionable.ActionImpact.DESTROYED)) {
-            HistoryUtils.newHistory(MemberManagement.RESOLVER);
+            HistoryUtils.newHistory(   MemberManagement.RESOLVER);
           }
         }
       });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/MemberManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/MemberManagement.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/MemberManagement.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/MemberManagement.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/MemberManagement.java	
@@ -7,8 +7,14 @@
  */
 package org.roda.wui.client.management;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.FlowPanel;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.user.RODAMember;
 import org.roda.wui.client.common.UserLogin;
 import org.roda.wui.client.common.actions.RODAMemberActions;
@@ -25,15 +31,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 public class MemberManagement extends Composite {
   private static final ClientMessages messages = GWT.create(ClientMessages.class);
@@ -121,7 +119,7 @@
       } else if (historyTokens.get(0).equals(CreateGroup.RESOLVER.getHistoryToken())) {
         CreateGroup.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     } else if (historyTokens.size() == 2) {
@@ -140,11 +138,11 @@
       } else if (historyTokens.get(0).equals(CreateAccessKey.RESOLVER.getHistoryToken())) {
         CreateAccessKey.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
       } else {
-        HistoryUtils.newHistory(RESOLVER);
+        HistoryUtils.newHistory(   RESOLVER);
         callback.onSuccess(null);
       }
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/tools/HistoryUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/tools/HistoryUtils.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/tools/HistoryUtils.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/tools/HistoryUtils.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/tools/HistoryUtils.java	
@@ -105,14 +105,19 @@
     return historyPath;
   }
 
-  public static List<String> decodeList(List<String> splitted) {
+  /** Reverse {@link #createPathToken(List)} operation by applying the {@link URL#decodePathSegment(String)} for path strings
+   * @param splitted
+   * @return */
+  private static List<String> decodeList(List<String> splitted) {
     List<String> tokens = new ArrayList<>();
     for (String item : splitted) {
-      tokens.add(URL.decodeQueryString(item));
+      tokens.add(URL.decodePathSegment(item));
     }
     return tokens;
   }
 
+  /** {@link #decodeList(List)} tokens from the {@link Window.Location#getHash()}
+   * @return */
   public static List<String> getCurrentHistoryPath() {
     String hash = Window.Location.getHash();
     if (hash.length() > 0) {
@@ -157,19 +162,19 @@
     return appendTokens(tokens, URL::encodeQueryString);
   }
 
-  /** {@link Window.Location#assign(String)} as hash '#' link for query strings!
-   * {@link #createQueryToken(List)}
+  /** {@link Window.Location#assign(String)} as hash '#' link for path strings!
+   * {@link #createPathToken(List)}
    * @param path */
   public static void newHistory(List<String> path) {
-    String hash = createQueryToken(path);
+    String hash = createPathToken(path);
     Window.Location.assign("#" + hash);
   }
 
-  /** {@link Window.Location#replace(String)} as hash '#' link for query strings!
-   * {@link #createQueryToken(List)}
+  /** {@link Window.Location#replace(String)} as hash '#' link for path strings!
+   * {@link #createPathToken(List)}
    * @param path */
   public static void replaceHistory(List<String> path) {
-    String hash = createQueryToken(path);
+    String hash = createPathToken(path);
     Window.Location.replace("#" + hash);
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/JobActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/JobActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/JobActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/JobActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/JobActions.java	
@@ -154,14 +154,14 @@
 
   private void ingestProcess(Job object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(Search.RESOLVER, RodaConstants.SEARCH_WITH_PREFILTER_HANDLER, "title",
+    HistoryUtils.newHistory(   Search.RESOLVER, RodaConstants.SEARCH_WITH_PREFILTER_HANDLER, "title",
       messages.searchPrefilterCreatedByJob(object.getName()), SearchFilters.classesToHistoryTokens(IndexedAIP.class),
       RodaConstants.ALL_INGEST_JOB_IDS, object.getId());
   }
 
   private void ingestAppraisal(Job object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(IngestAppraisal.RESOLVER, RodaConstants.INGEST_JOB_ID, object.getId());
+    HistoryUtils.newHistory(   IngestAppraisal.RESOLVER, RodaConstants.INGEST_JOB_ID, object.getId());
   }
 
   private void stop(Job object, AsyncCallback<ActionImpact> callback) {
@@ -340,7 +340,7 @@
   private void newProcess(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     if (newProcessResolver != null) {
-      HistoryUtils.newHistory(newProcessResolver);
+      HistoryUtils.newHistory(   newProcessResolver);
     }
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/TransferredResourceActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/TransferredResourceActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/TransferredResourceActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/TransferredResourceActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/TransferredResourceActions.java	
@@ -7,11 +7,11 @@
  */
 package org.roda.wui.client.common.actions;
 
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.regexp.shared.RegExp;
+import com.google.gwt.user.client.Timer;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.exceptions.IsStillUpdatingException;
 import org.roda.core.data.v2.index.filter.Filter;
@@ -38,12 +38,10 @@
 import org.roda.wui.common.client.tools.StringUtils;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.regexp.shared.RegExp;
-import com.google.gwt.user.client.Timer;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-
-import config.i18n.client.ClientMessages;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 
 /**
  * @author Bruno Ferreira <bferreira@keep.pt>
@@ -193,9 +191,9 @@
 
   private void newProcess(SelectedItems<TransferredResource> objects, AsyncCallback<ActionImpact> callback) {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
     selectedItems.setSelectedItems(objects);
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_INGEST);
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_INGEST);
     callback.onSuccess(ActionImpact.NONE);
   }
 
@@ -230,7 +228,7 @@
                     @Override
                     public void onSuccess(String result) {
                       Toast.showInfo(messages.dialogSuccess(), messages.renameSIPSuccessful());
-                      HistoryUtils.newHistory(IngestTransfer.RESOLVER, result);
+                      HistoryUtils.newHistory(   IngestTransfer.RESOLVER, result);
                       doActionCallbackNone();
                     }
                   });
@@ -279,7 +277,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   Toast.showInfo(messages.dialogFailure(), messages.moveSIPFailed());
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                   doActionCallbackUpdated();
                 }
 
@@ -295,9 +293,9 @@
                         @Override
                         public void run() {
                           if (transferredResource != null) {
-                            HistoryUtils.newHistory(IngestTransfer.RESOLVER, transferredResource.getUUID());
+                            HistoryUtils.newHistory(   IngestTransfer.RESOLVER, transferredResource.getUUID());
                           } else {
-                            HistoryUtils.newHistory(IngestTransfer.RESOLVER);
+                            HistoryUtils.newHistory(   IngestTransfer.RESOLVER);
                           }
                           doActionCallbackUpdated();
                         }
@@ -308,7 +306,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                       doActionCallbackNone();
                     }
                   });
@@ -379,9 +377,9 @@
 
   private void upload(TransferredResource object, AsyncCallback<ActionImpact> callback) {
     if (object != NO_TRANSFERRED_RESOURCE) {
-      HistoryUtils.newHistory(TransferUpload.INGEST_RESOLVER, object.getUUID());
+      HistoryUtils.newHistory(   TransferUpload.INGEST_RESOLVER, object.getUUID());
     } else {
-      HistoryUtils.newHistory(TransferUpload.INGEST_RESOLVER);
+      HistoryUtils.newHistory(   TransferUpload.INGEST_RESOLVER);
     }
     callback.onSuccess(ActionImpact.NONE);
   }
@@ -401,7 +399,7 @@
             new ActionAsyncCallback<String>(callback) {
               @Override
               public void onSuccess(String newResourceUUID) {
-                HistoryUtils.newHistory(IngestTransfer.RESOLVER, newResourceUUID);
+                HistoryUtils.newHistory(   IngestTransfer.RESOLVER, newResourceUUID);
                 doActionCallbackUpdated();
               }
             });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Theme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Theme.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Theme.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Theme.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Theme.java	
@@ -53,7 +53,7 @@
         Theme theme = new Theme(sb.toString(), resourceType);
         callback.onSuccess(theme);
       } else {
-        HistoryUtils.newHistory(Theme.RESOLVER);
+        HistoryUtils.newHistory(   Theme.RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/NavigationToolbar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/NavigationToolbar.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/NavigationToolbar.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/NavigationToolbar.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/NavigationToolbar.java	
@@ -480,7 +480,7 @@
         searchFilters.add(RodaConstants.FILE_ANCESTORS);
         searchFilters.add(object.getId());
 
-        HistoryUtils.newHistory(Search.RESOLVER, searchFilters);
+        HistoryUtils.newHistory(   Search.RESOLVER, searchFilters);
       } else if (action.equals(SearchAipAction.SEARCH_PACKAGE)) {
         List<String> searchFilters = new ArrayList<>();
 
@@ -496,7 +496,7 @@
         searchFilters.add(RodaConstants.FILE_AIP_ID);
         searchFilters.add(object.getId());
 
-        HistoryUtils.newHistory(Search.RESOLVER, searchFilters);
+        HistoryUtils.newHistory(   Search.RESOLVER, searchFilters);
       } else {
         unsupportedAction(action, callback);
       }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/EditDisposalSchedule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/EditDisposalSchedule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/EditDisposalSchedule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/EditDisposalSchedule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/EditDisposalSchedule.java	
@@ -7,8 +7,16 @@
  */
 package org.roda.wui.client.disposal.schedule;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.uibinder.client.UiHandler;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Button;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.ip.disposal.DisposalSchedule;
 import org.roda.core.data.v2.ip.disposal.DisposalScheduleState;
 import org.roda.wui.client.browse.BrowserService;
@@ -21,17 +29,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.server.browse.BrowserServiceImpl;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.uibinder.client.UiHandler;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Tiago Fraga <tfraga@keep.pt>
@@ -48,7 +46,7 @@
             @Override
             public void onSuccess(DisposalSchedule result) {
               if (DisposalScheduleState.INACTIVE.equals(result.getState())) {
-                HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+                HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
               } else {
                 EditDisposalSchedule panel = new EditDisposalSchedule(result);
                 callback.onSuccess(panel);
@@ -132,17 +130,17 @@
         new NoAsyncCallback<DisposalSchedule>() {
           @Override
           public void onSuccess(DisposalSchedule disposalSchedule) {
-            HistoryUtils.newHistory(ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
+            HistoryUtils.newHistory(   ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
           }
         });
     } else {
-      HistoryUtils.newHistory(ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
+      HistoryUtils.newHistory(   ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
     }
   }
 
   @UiHandler("buttonCancel")
   void buttonCancelHandler(ClickEvent e) {
-    HistoryUtils.newHistory(ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
+    HistoryUtils.newHistory(   ShowDisposalSchedule.RESOLVER, disposalSchedule.getId());
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Register.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Register.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Register.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Register.java	
@@ -60,7 +60,7 @@
         Register register = new Register();
         callback.onSuccess(register);
       } else {
-        HistoryUtils.newHistory(this);
+        HistoryUtils.newHistory(   this);
         callback.onSuccess(null);
       }
     }
@@ -74,7 +74,7 @@
           if (user != null && user.isGuest()) {
             callback.onSuccess(true);
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
             callback.onSuccess(null);
           }
         }
@@ -187,12 +187,12 @@
 
                     @Override
                     public void onSuccess(Void result) {
-                      HistoryUtils.newHistory(Login.RESOLVER);
+                      HistoryUtils.newHistory(   Login.RESOLVER);
                     }
 
                     @Override
                     public void onFailure(Throwable caught) {
-                      HistoryUtils.newHistory(Login.RESOLVER);
+                      HistoryUtils.newHistory(   Login.RESOLVER);
                     }
                   });
               } else {
@@ -202,12 +202,12 @@
 
                     @Override
                     public void onSuccess(Void result) {
-                      HistoryUtils.newHistory(Login.RESOLVER);
+                      HistoryUtils.newHistory(   Login.RESOLVER);
                     }
 
                     @Override
                     public void onFailure(Throwable caught) {
-                      HistoryUtils.newHistory(Login.RESOLVER);
+                      HistoryUtils.newHistory(   Login.RESOLVER);
                     }
                   });
               }
@@ -223,7 +223,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(Login.RESOLVER);
+    HistoryUtils.newHistory(   Login.RESOLVER);
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/ShowDisposalSchedule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/ShowDisposalSchedule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/ShowDisposalSchedule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/ShowDisposalSchedule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/ShowDisposalSchedule.java	
@@ -273,7 +273,7 @@
       editScheduleBtn.setText(messages.editButton());
       if (PermissionClientUtils.hasPermissions(RodaConstants.PERMISSION_METHOD_UPDATE_DISPOSAL_SCHEDULE)) {
         editScheduleBtn.addClickHandler(
-          clickEvent -> HistoryUtils.newHistory(EditDisposalSchedule.RESOLVER, disposalSchedule.getId()));
+          clickEvent -> HistoryUtils.newHistory(   EditDisposalSchedule.RESOLVER, disposalSchedule.getId()));
       }
       buttonsPanel.add(editScheduleBtn);
 
@@ -289,7 +289,7 @@
             new NoAsyncCallback<DisposalSchedule>() {
               @Override
               public void onSuccess(DisposalSchedule disposalSchedule) {
-                HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+                HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
               }
             });
         });
@@ -308,7 +308,7 @@
               @Override
               public void onSuccess(Void result) {
                 Toast.showInfo("Delete", "Delete");
-                HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+                HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
               }
             });
         });
@@ -319,7 +319,7 @@
     Button backBtn = new Button();
     backBtn.setText(messages.backButton());
     backBtn.addStyleName("btn btn-block btn-default btn-times-circle");
-    backBtn.addClickHandler(clickEvent -> HistoryUtils.newHistory(DisposalPolicy.RESOLVER));
+    backBtn.addClickHandler(clickEvent -> HistoryUtils.newHistory(   DisposalPolicy.RESOLVER));
     buttonsPanel.add(backBtn);
 
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/AipActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/AipActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/AipActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/AipActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/AipActions.java	
@@ -281,9 +281,9 @@
     BrowserService.Util.getInstance().createAIP(parentAipId, aipType, new ActionAsyncCallback<String>(callback) {
       @Override
       public void onSuccess(String itemAIPId) {
-        LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
+        LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
         doActionCallbackNone();
-        HistoryUtils.newHistory(CreateDescriptiveMetadata.RESOLVER, RodaConstants.RODA_OBJECT_AIP, itemAIPId,
+        HistoryUtils.newHistory(   CreateDescriptiveMetadata.RESOLVER, RodaConstants.RODA_OBJECT_AIP, itemAIPId,
           CreateDescriptiveMetadata.NEW);
       }
     });
@@ -340,16 +340,16 @@
                               public void onFailure(Throwable caught) {
                                 doActionCallbackNone();
                                 if (result != null) {
-                                  HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                  HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                                 } else {
-                                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                                 }
                               }
 
                               @Override
                               public void onSuccess(final Void nothing) {
                                 doActionCallbackNone();
-                                HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                               }
                             });
                           }
@@ -428,9 +428,9 @@
 
                                 doActionCallbackNone();
                                 if (result != null) {
-                                  HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                  HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                                 } else {
-                                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                                 }
                               }
                             });
@@ -447,15 +447,15 @@
 
   private void updatePermissions(IndexedAIP aip, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(EditPermissions.AIP_RESOLVER, aip.getId());
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   EditPermissions.AIP_RESOLVER, aip.getId());
   }
 
   private void updatePermissions(SelectedItems<IndexedAIP> aips, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton.getInstance().setSelectedItems(aips);
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(EditPermissions.AIP_RESOLVER);
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   EditPermissions.AIP_RESOLVER);
   }
 
   private void remove(final IndexedAIP aip, final AsyncCallback<ActionImpact> callback) {
@@ -491,7 +491,7 @@
                           @Override
                           public void onSuccess(final Void nothing) {
                             doActionCallbackNone();
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                           }
                         });
                       }
@@ -542,7 +542,7 @@
                                 @Override
                                 public void onSuccess(final Void nothing) {
                                   doActionCallbackNone();
-                                  HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                  HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                                 }
                               });
                           }
@@ -561,15 +561,15 @@
   private void newProcess(IndexedAIP aip, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton.getInstance().setSelectedItems(objectToSelectedItems(aip, IndexedAIP.class));
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void newProcess(SelectedItems<IndexedAIP> aips, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton.getInstance().setSelectedItems(aips);
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void downloadEvents(IndexedAIP aip, AsyncCallback<ActionImpact> callback) {
@@ -599,7 +599,7 @@
           @Override
           public void onSuccess(final Void nothing) {
             doActionCallbackNone();
-            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
           }
         });
       }
@@ -628,13 +628,13 @@
                   @Override
                   public void onFailure(Throwable caught) {
                     doActionCallbackNone();
-                    HistoryUtils.newHistory(IngestAppraisal.RESOLVER);
+                    HistoryUtils.newHistory(   IngestAppraisal.RESOLVER);
                   }
 
                   @Override
                   public void onSuccess(final Void nothing) {
                     doActionCallbackNone();
-                    HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                    HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                   }
                 });
               }
@@ -717,7 +717,7 @@
                               @Override
                               public void onSuccess(final Void nothing) {
                                 doActionCallbackNone();
-                                HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                               }
                             });
                           }
@@ -780,7 +780,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -804,7 +804,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -832,7 +832,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -856,7 +856,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -917,7 +917,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -941,7 +941,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -966,7 +966,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -990,7 +990,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskIncidenceActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskIncidenceActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskIncidenceActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskIncidenceActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskIncidenceActions.java	
@@ -135,8 +135,8 @@
   private void startProcess(SelectedItems<RiskIncidence> objects, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton.getInstance().setSelectedItems(objects);
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void remove(SelectedItems<RiskIncidence> objects, AsyncCallback<ActionImpact> callback) {
@@ -177,7 +177,7 @@
                                 @Override
                                 public void onSuccess(final Void nothing) {
                                   doActionCallbackNone();
-                                  HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                  HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                                 }
                               });
                           }
@@ -196,7 +196,7 @@
   // ACTIONS
   private void edit(RiskIncidence object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(EditRiskIncidence.RESOLVER, object.getId());
+    HistoryUtils.newHistory(   EditRiskIncidence.RESOLVER, object.getId());
   }
 
   private void edit(SelectedItems<RiskIncidence> objects, AsyncCallback<ActionImpact> callback) {
@@ -223,7 +223,7 @@
               @Override
               public void onSuccess(final Void nothing) {
                 doActionCallbackNone();
-                HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
               }
             });
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalHoldActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalHoldActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalHoldActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalHoldActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalHoldActions.java	
@@ -126,7 +126,7 @@
                     @Override
                     public void onFailure(Throwable caught) {
                       callback.onFailure(caught);
-                      HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                      HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                     }
 
                     @Override
@@ -151,7 +151,7 @@
                         @Override
                         public void onSuccess(final Void nothing) {
                           doActionCallbackNone();
-                          HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                          HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                         }
                       });
                     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Login.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Login.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Login.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Login.java	
@@ -168,7 +168,7 @@
 
   @UiHandler("homepage")
   void handleHomepage(ClickEvent e) {
-    HistoryUtils.newHistory(Welcome.RESOLVER);
+    HistoryUtils.newHistory(   Welcome.RESOLVER);
   }
 
   @UiHandler("logout")
@@ -183,12 +183,12 @@
 
   @UiHandler("register")
   void handleRegister(ClickEvent e) {
-    HistoryUtils.newHistory(Register.RESOLVER);
+    HistoryUtils.newHistory(   Register.RESOLVER);
   }
 
   @UiHandler("recover")
   void handleRecover(ClickEvent e) {
-    HistoryUtils.newHistory(RecoverLogin.RESOLVER);
+    HistoryUtils.newHistory(   RecoverLogin.RESOLVER);
   }
 
   @UiHandler("username")
@@ -216,12 +216,12 @@
 
                 @Override
                 public void onSuccess(final Void result) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
 
                 @Override
                 public void onFailure(final Throwable caught) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
               });
           } else {
@@ -231,12 +231,12 @@
 
                 @Override
                 public void onSuccess(final Void result) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
 
                 @Override
                 public void onFailure(final Throwable caught) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
               });
           }
@@ -283,9 +283,9 @@
         @Override
         public void onSuccess(User user) {
           if (serviceTokens != null && !serviceTokens.isEmpty()) {
-            HistoryUtils.newHistory(serviceTokens);
+            HistoryUtils.newHistory(   serviceTokens);
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
           }
         }
       });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/UserLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/UserLogin.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/UserLogin.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/UserLogin.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/UserLogin.java	
@@ -10,11 +10,12 @@
  */
 package org.roda.wui.client.common;
 
-import java.util.Arrays;
-import java.util.List;
-import java.util.Optional;
-import java.util.Vector;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.http.client.URL;
+import com.google.gwt.safehtml.shared.UriUtils;
+import com.google.gwt.user.client.Window;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.user.Group;
 import org.roda.core.data.v2.user.RODAMember;
 import org.roda.core.data.v2.user.User;
@@ -28,13 +29,10 @@
 import org.roda.wui.common.client.tools.HistoryUtils;
 import org.roda.wui.common.client.tools.StringUtils;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.http.client.URL;
-import com.google.gwt.safehtml.shared.UriUtils;
-import com.google.gwt.user.client.Window;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-
-import config.i18n.client.ClientMessages;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Optional;
+import java.util.Vector;
 
 /**
  * @author Luis Faria
@@ -301,13 +299,13 @@
           if (result) {
             UserLogin.getInstance().login();
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
           }
         }
 
         @Override
         public void onFailure(Throwable caught) {
-          HistoryUtils.newHistory(Welcome.RESOLVER);
+          HistoryUtils.newHistory(   Welcome.RESOLVER);
         }
       });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/BreadcrumbItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/BreadcrumbItem.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/BreadcrumbItem.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/BreadcrumbItem.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/BreadcrumbItem.java	
@@ -32,7 +32,7 @@
 
       @Override
       public void execute() {
-        HistoryUtils.newHistory(path);
+        HistoryUtils.newHistory(   path);
       }
     });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateSelectedJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateSelectedJob.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateSelectedJob.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateSelectedJob.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateSelectedJob.java	
@@ -85,11 +85,11 @@
           CreateActionJob createActionJob = new CreateActionJob();
           callback.onSuccess(createActionJob);
         } else {
-          HistoryUtils.newHistory(CreateSelectedJob.RESOLVER);
+          HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER);
           callback.onSuccess(null);
         }
       } else {
-        HistoryUtils.newHistory(CreateSelectedJob.RESOLVER);
+        HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -207,7 +207,7 @@
     boolean isEmpty = updateObjectList();
     if (isEmpty) {
       List<String> lastHistory = LastSelectedItemsSingleton.getInstance().getLastHistory();
-      HistoryUtils.newHistory(lastHistory);
+      HistoryUtils.newHistory(   lastHistory);
     }
 
     BrowserService.Util.getInstance().retrievePluginsInfo(pluginType, new AsyncCallback<List<PluginInfo>>() {
@@ -539,7 +539,7 @@
     Button documentationButton = new Button(messages.pluginDocumentationLabel());
     documentationButton.addStyleName("btn pluginWorkFlowListTitleButtons btn-book");
     if (selectedPlugin.hasDocumentationFile()) {
-      documentationButton.addClickHandler(clickEvent -> HistoryUtils.newHistory(Theme.RESOLVER,
+      documentationButton.addClickHandler(clickEvent -> HistoryUtils.newHistory(   Theme.RESOLVER,
         RodaConstants.ResourcesTypes.PLUGINS.toString(), selectedPlugin.getDocumentationFilePath()));
       rightPanel.add(documentationButton);
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/CreateDisposalSchedule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/CreateDisposalSchedule.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/CreateDisposalSchedule.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/CreateDisposalSchedule.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/schedule/CreateDisposalSchedule.java	
@@ -102,7 +102,7 @@
         new NoAsyncCallback<DisposalSchedule>() {
           @Override
           public void onSuccess(DisposalSchedule createdDisposalSchedule) {
-            HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+            HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
           }
 
         });
@@ -115,7 +115,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+    HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationReviewActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationReviewActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationReviewActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationReviewActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationReviewActions.java	
@@ -157,7 +157,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -181,7 +181,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -209,7 +209,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -233,7 +233,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/IngestProcess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/IngestProcess.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/IngestProcess.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/IngestProcess.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/IngestProcess.java	
@@ -10,20 +10,20 @@
  */
 package org.roda.wui.client.process;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.FlowPanel;
 import com.google.gwt.user.client.ui.InlineHTML;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.index.filter.Filter;
 import org.roda.core.data.v2.index.filter.SimpleFilterParameter;
-import org.roda.core.data.v2.jobs.Job;
 import org.roda.core.data.v2.jobs.PluginType;
 import org.roda.wui.client.common.UserLogin;
-import org.roda.wui.client.common.actions.JobActions;
-import org.roda.wui.client.common.actions.model.ActionableObject;
-import org.roda.wui.client.common.actions.widgets.ActionableWidgetBuilder;
-import org.roda.wui.client.common.utils.JavascriptUtils;
-import org.roda.wui.client.common.utils.SidebarUtils;
 import org.roda.wui.client.ingest.Ingest;
 import org.roda.wui.client.ingest.process.ShowJob;
 import org.roda.wui.client.ingest.transfer.IngestTransfer;
@@ -34,16 +34,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.SimplePanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -128,7 +119,7 @@
     } else if (historyTokens.size() > 1 && historyTokens.get(0).equals(ShowJob.RESOLVER.getHistoryToken())) {
       ShowJob.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalRuleActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalRuleActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalRuleActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalRuleActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalRuleActions.java	
@@ -33,7 +33,7 @@
       messages.dialogNo(), messages.dialogYes(), new NoAsyncCallback<Boolean>() {
         @Override
         public void onSuccess(Boolean result) {
-          HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+          HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
           if (result) {
             DisposalDialogs.showApplyRules(messages.applyDisposalRulesDialogTitle(), new NoAsyncCallback<Boolean>() {
               @Override
@@ -43,7 +43,7 @@
                     @Override
                     public void onFailure(Throwable caught) {
                       AsyncCallbackUtils.defaultFailureTreatment(caught);
-                      HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                      HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                     }
 
                     @Override
@@ -57,7 +57,7 @@
 
                         @Override
                         public void onSuccess(final Void nothing) {
-                          HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                          HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                         }
                       });
                     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateActionJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateActionJob.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateActionJob.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateActionJob.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateActionJob.java	
@@ -79,7 +79,7 @@
         SearchWrapper search = new SearchWrapper(false).createListAndSearchPanel(listBuilder);
         getTargetPanel().add(search);
       } else {
-        HistoryUtils.newHistory(CreateDefaultJob.RESOLVER);
+        HistoryUtils.newHistory(   CreateDefaultJob.RESOLVER);
       }
 
       setJobSelectedDescription(messages.createJobSelectObject());
@@ -106,7 +106,7 @@
         @Override
         public void onSuccess(Job job) {
           Toast.showInfo(messages.dialogDone(), messages.processCreated());
-          HistoryUtils.newHistory(ActionProcess.RESOLVER);
+          HistoryUtils.newHistory(   ActionProcess.RESOLVER);
         }
 
       });
@@ -135,9 +135,9 @@
   public void cancel() {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     if (selectedItems.getLastHistory().isEmpty()) {
-      HistoryUtils.newHistory(Search.RESOLVER);
+      HistoryUtils.newHistory(   Search.RESOLVER);
     } else {
-      HistoryUtils.newHistory(selectedItems.getLastHistory());
+      HistoryUtils.newHistory(   selectedItems.getLastHistory());
     }
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationReportActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationReportActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationReportActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationReportActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationReportActions.java	
@@ -179,13 +179,13 @@
                       Toast.showInfo(messages.recoverDestroyedRecordsSuccessTitle(),
                         messages.recoverDestroyedRecordsSuccessMessage());
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+                      HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -216,13 +216,13 @@
                       Toast.showInfo(messages.restoreDestroyedRecordsSuccessTitle(),
                         messages.restoreDestroyedRecordsSuccessMessage());
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+                      HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -254,13 +254,13 @@
                       Toast.showInfo(messages.permanentlyDeleteRecordsSuccessTitle(),
                         messages.permanentlyDeleteRecordsSuccessMessage());
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+                      HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -291,13 +291,13 @@
                       Toast.showInfo(messages.deleteConfirmationReportSuccessTitle(),
                         messages.deleteConfirmationReportSuccessMessage());
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+                      HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackUpdated();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -336,13 +336,13 @@
                             Toast.showInfo(messages.deleteConfirmationReportSuccessTitle(),
                               messages.deleteConfirmationReportSuccessMessage());
                             doActionCallbackDestroyed();
-                            HistoryUtils.newHistory(ShowDisposalConfirmation.RESOLVER);
+                            HistoryUtils.newHistory(   ShowDisposalConfirmation.RESOLVER);
                           }
 
                           @Override
                           public void onSuccess(final Void nothing) {
                             doActionCallbackNone();
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                           }
                         });
                       }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateGroup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateGroup.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateGroup.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateGroup.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/CreateGroup.java	
@@ -111,7 +111,7 @@
 
         @Override
         public void onSuccess(Void result) {
-          HistoryUtils.newHistory(MemberManagement.RESOLVER);
+          HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         }
 
         @Override
@@ -128,7 +128,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(MemberManagement.RESOLVER);
+    HistoryUtils.newHistory(   MemberManagement.RESOLVER);
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Menu.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Menu.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Menu.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Menu.java	
@@ -289,7 +289,7 @@
   }
 
   private ScheduledCommand createCommand(final List<String> path) {
-    return () -> HistoryUtils.newHistory(path);
+    return () -> HistoryUtils.newHistory(   path);
   }
 
   private ScheduledCommand createLoginCommand() {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ResetPassword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ResetPassword.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ResetPassword.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ResetPassword.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ResetPassword.java	
@@ -65,7 +65,7 @@
         recoverLogin.setValuesAndHide(historyTokens.get(0), historyTokens.get(1));
         callback.onSuccess(recoverLogin);
       } else {
-        HistoryUtils.newHistory(Login.RESOLVER);
+        HistoryUtils.newHistory(   Login.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -79,7 +79,7 @@
           if (user.isGuest()) {
             callback.onSuccess(true);
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
             callback.onSuccess(null);
           }
         }
@@ -155,7 +155,7 @@
 
       @Override
       public void onClick(ClickEvent event) {
-        HistoryUtils.newHistory(Login.RESOLVER);
+        HistoryUtils.newHistory(   Login.RESOLVER);
       }
     });
 
@@ -283,12 +283,12 @@
 
                   @Override
                   public void onSuccess(Void result) {
-                    HistoryUtils.newHistory(Login.RESOLVER);
+                    HistoryUtils.newHistory(   Login.RESOLVER);
                   }
 
                   @Override
                   public void onFailure(Throwable caught) {
-                    HistoryUtils.newHistory(Login.RESOLVER);
+                    HistoryUtils.newHistory(   Login.RESOLVER);
                   }
                 });
             }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalAssociationActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalAssociationActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalAssociationActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalAssociationActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalAssociationActions.java	
@@ -137,7 +137,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -161,7 +161,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -189,7 +189,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -213,7 +213,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalScheduleActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalScheduleActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalScheduleActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalScheduleActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalScheduleActions.java	
@@ -124,7 +124,7 @@
                     @Override
                     public void onFailure(Throwable caught) {
                       callback.onFailure(caught);
-                      HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                      HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                     }
 
                     @Override
@@ -149,7 +149,7 @@
                         @Override
                         public void onSuccess(final Void nothing) {
                           doActionCallbackNone();
-                          HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                          HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                         }
                       });
                     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateDefaultJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateDefaultJob.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateDefaultJob.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateDefaultJob.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateDefaultJob.java	
@@ -103,7 +103,7 @@
         CreateDefaultJob createDefaultJob = new CreateDefaultJob();
         callback.onSuccess(createDefaultJob);
       } else {
-        HistoryUtils.newHistory(CreateDefaultJob.RESOLVER);
+        HistoryUtils.newHistory(   CreateDefaultJob.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -553,7 +553,7 @@
     Button documentationButton = new Button(messages.pluginDocumentationLabel());
     documentationButton.addStyleName("btn pluginWorkFlowListTitleButtons btn-book");
     if (selectedPlugin.hasDocumentationFile()) {
-      documentationButton.addClickHandler(clickEvent -> HistoryUtils.newHistory(Theme.RESOLVER,
+      documentationButton.addClickHandler(clickEvent -> HistoryUtils.newHistory(   Theme.RESOLVER,
         RodaConstants.ResourcesTypes.PLUGINS.toString(), selectedPlugin.getDocumentationFilePath()));
       rightPanel.add(documentationButton);
     }
@@ -724,7 +724,7 @@
         @Override
         public void onSuccess(Job result) {
           Toast.showInfo(messages.dialogDone(), messages.processCreated());
-          HistoryUtils.newHistory(ActionProcess.RESOLVER);
+          HistoryUtils.newHistory(   ActionProcess.RESOLVER);
         }
       });
   }
@@ -759,7 +759,7 @@
 
   @UiHandler("buttonCancel")
   public void cancel(ClickEvent e) {
-    HistoryUtils.newHistory(ActionProcess.RESOLVER);
+    HistoryUtils.newHistory(   ActionProcess.RESOLVER);
   }
 
   public PluginInfo getSelectedPlugin() {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/widgets/HTMLWidgetWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/widgets/HTMLWidgetWrapper.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/widgets/HTMLWidgetWrapper.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/widgets/HTMLWidgetWrapper.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/common/client/widgets/HTMLWidgetWrapper.java	
@@ -165,7 +165,7 @@
             HTMLWidgetWrapper.this.setHTML(html);
             callback.onSuccess(null);
           } else if (response.getStatusCode() == 404) {
-            HistoryUtils.newHistory(Theme.RESOLVER, "Error404.html");
+            HistoryUtils.newHistory(   Theme.RESOLVER, "Error404.html");
           } else {
             logger.error("Error sending request");
             callback.onFailure(new GenericException("Error sending request"));
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/GroupDataPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/GroupDataPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/GroupDataPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/GroupDataPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/GroupDataPanel.java	
@@ -164,7 +164,7 @@
       @Override
       public void onFailure(Throwable caught) {
         AsyncCallbackUtils.defaultFailureTreatment(caught);
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
       }
     });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Statistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Statistics.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Statistics.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Statistics.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Statistics.java	
@@ -102,7 +102,7 @@
       init();
       callback.onSuccess(layout);
     } else {
-      HistoryUtils.newHistory(Statistics.RESOLVER.getHistoryPath());
+      HistoryUtils.newHistory(   Statistics.RESOLVER.getHistoryPath());
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Main.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Main.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Main.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/Main.java	
@@ -10,20 +10,6 @@
  */
 package org.roda.wui.client.main;
 
-import java.util.List;
-import java.util.Map;
-
-import org.roda.core.data.common.RodaConstants;
-import org.roda.wui.client.browse.BrowserService;
-import org.roda.wui.client.common.resources.MyResources;
-import org.roda.wui.client.common.utils.JavascriptUtils;
-import org.roda.wui.client.welcome.Welcome;
-import org.roda.wui.common.client.ClientLogger;
-import org.roda.wui.common.client.tools.ConfigurationManager;
-import org.roda.wui.common.client.tools.HistoryUtils;
-import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
-import org.roda.wui.common.client.widgets.wcag.AccessibleFocusPanel;
-
 import com.google.gwt.core.client.EntryPoint;
 import com.google.gwt.core.client.GWT;
 import com.google.gwt.dom.client.Element;
@@ -38,8 +24,20 @@
 import com.google.gwt.user.client.ui.FlowPanel;
 import com.google.gwt.user.client.ui.RootPanel;
 import com.google.gwt.user.client.ui.Widget;
-
 import config.i18n.client.ClientMessages;
+import org.roda.core.data.common.RodaConstants;
+import org.roda.wui.client.browse.BrowserService;
+import org.roda.wui.client.common.resources.MyResources;
+import org.roda.wui.client.common.utils.JavascriptUtils;
+import org.roda.wui.client.welcome.Welcome;
+import org.roda.wui.common.client.ClientLogger;
+import org.roda.wui.common.client.tools.ConfigurationManager;
+import org.roda.wui.common.client.tools.HistoryUtils;
+import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
+import org.roda.wui.common.client.widgets.wcag.AccessibleFocusPanel;
+
+import java.util.List;
+import java.util.Map;
 
 /**
  * @author Luis Faria
@@ -133,7 +131,7 @@
 
     bannerLogo.add(new HTMLWidgetWrapper("Banner.html"));
 
-    homeLinkArea.addClickHandler(event -> HistoryUtils.newHistory(Welcome.RESOLVER));
+    homeLinkArea.addClickHandler(event -> HistoryUtils.newHistory(   Welcome.RESOLVER));
 
     homeLinkArea.setTitle(messages.homeTitle());
 
@@ -146,9 +144,9 @@
   private void onHistoryChanged(String historyToken) {
     if (historyToken.length() == 0) {
       contentPanel.update(Welcome.RESOLVER.getHistoryPath());
-      HistoryUtils.newHistory(Welcome.RESOLVER);
+      HistoryUtils.newHistory(   Welcome.RESOLVER);
     } else {
-      List<String> currentHistoryPath = HistoryUtils.getCurrentHistoryPath();
+      List<String> currentHistoryPath = HistoryUtils.getCurrentHistoryPath (   );
       contentPanel.update(currentHistoryPath);
       GAnalyticsTracker.track(historyToken);
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationActions.java	
@@ -150,7 +150,7 @@
             new ActionLoadingAsyncCallback<String>(callback) {
               @Override
               public void onSuccessImpl(String representationId) {
-                HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, parentAipId, representationId);
+                HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, parentAipId, representationId);
                 callback.onSuccess(ActionImpact.UPDATED);
               }
             });
@@ -244,7 +244,7 @@
                             @Override
                             public void onSuccess(final Void nothing) {
                               doActionCallbackNone();
-                              HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                              HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                             }
                           });
                       }
@@ -252,7 +252,7 @@
                       @Override
                       public void onFailure(Throwable caught) {
                         doActionCallbackNone();
-                        HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                        HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                       }
                     });
                 }
@@ -304,7 +304,7 @@
                               @Override
                               public void onSuccess(final Void nothing) {
                                 doActionCallbackNone();
-                                HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                                HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                               }
                             });
                           }
@@ -325,8 +325,8 @@
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     selectedItems.setSelectedItems(selected);
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void identifyFormats(IndexedRepresentation representation, final AsyncCallback<ActionImpact> callback) {
@@ -349,7 +349,7 @@
           @Override
           public void onSuccess(final Void nothing) {
             doActionCallbackNone();
-            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
           }
         });
       }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserLog.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserLog.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserLog.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserLog.java	
@@ -10,8 +10,14 @@
  */
 package org.roda.wui.client.management;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.FlowPanel;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.index.filter.Filter;
 import org.roda.core.data.v2.index.filter.SimpleFilterParameter;
@@ -27,15 +33,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -120,7 +118,7 @@
         new Filter(new SimpleFilterParameter(RodaConstants.LOG_RELATED_OBJECT_ID, aipId)));
       callback.onSuccess(this);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/NotificationRegister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/NotificationRegister.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/NotificationRegister.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/NotificationRegister.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/NotificationRegister.java	
@@ -104,7 +104,7 @@
     } else if (historyTokens.size() > 1 && ShowNotification.RESOLVER.getHistoryToken().equals(historyTokens.get(0))) {
       ShowNotification.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/InternalProcess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/InternalProcess.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/InternalProcess.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/InternalProcess.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/InternalProcess.java	
@@ -10,8 +10,14 @@
  */
 package org.roda.wui.client.process;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.FlowPanel;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.index.filter.Filter;
 import org.roda.core.data.v2.index.filter.SimpleFilterParameter;
@@ -25,15 +31,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -109,7 +107,7 @@
     } else if (historyTokens.size() > 1 && historyTokens.get(0).equals(ShowJob.RESOLVER.getHistoryToken())) {
       ShowJob.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/AcknowledgeNotification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/AcknowledgeNotification.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/AcknowledgeNotification.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/AcknowledgeNotification.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/AcknowledgeNotification.java	
@@ -87,7 +87,7 @@
           }
         });
     } else {
-      HistoryUtils.newHistory(NotificationRegister.RESOLVER);
+      HistoryUtils.newHistory(   NotificationRegister.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationDestroyActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationDestroyActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationDestroyActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationDestroyActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalCreateConfirmationDestroyActions.java	
@@ -128,7 +128,7 @@
             public void onSuccess(Boolean result) {
               if (result) {
                 doActionCallbackUpdated();
-                HistoryUtils.newHistory(CreateDisposalConfirmationDataPanel.RESOLVER);
+                HistoryUtils.newHistory(   CreateDisposalConfirmationDataPanel.RESOLVER);
               } else {
                 doActionCallbackNone();
               }
@@ -184,7 +184,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -208,7 +208,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
@@ -236,7 +236,7 @@
                 @Override
                 public void onFailure(Throwable caught) {
                   callback.onFailure(caught);
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -260,7 +260,7 @@
                     @Override
                     public void onSuccess(final Void nothing) {
                       doActionCallbackNone();
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/ContentPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/ContentPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/ContentPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/ContentPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/main/ContentPanel.java	
@@ -140,7 +140,7 @@
     if (foundResolver != null) {
       update(historyTokens, foundResolver);
     } else {
-      HistoryUtils.newHistory(Theme.RESOLVER, "Error404.html");
+      HistoryUtils.newHistory(   Theme.RESOLVER, "Error404.html");
     }
   }
 
@@ -171,12 +171,12 @@
                   new AsyncCallback<Void>() {
                     @Override
                     public void onFailure(Throwable caught) {
-                      HistoryUtils.newHistory(Welcome.RESOLVER);
+                      HistoryUtils.newHistory(   Welcome.RESOLVER);
                     }
 
                     @Override
                     public void onSuccess(Void result) {
-                      HistoryUtils.newHistory(Welcome.RESOLVER);
+                      HistoryUtils.newHistory(   Welcome.RESOLVER);
                     }
                   });
               }
@@ -188,7 +188,7 @@
             @Override
             public void onFailure(Throwable caught) {
               if (caught instanceof BadHistoryTokenException) {
-                HistoryUtils.newHistory(Theme.RESOLVER, "Error404.html");
+                HistoryUtils.newHistory(   Theme.RESOLVER, "Error404.html");
               } else {
                 AsyncCallbackUtils.defaultFailureTreatment(caught);
               }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateIngestJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateIngestJob.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateIngestJob.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateIngestJob.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/CreateIngestJob.java	
@@ -114,7 +114,7 @@
           @Override
           public void onSuccess(Job result) {
             Toast.showInfo(messages.dialogDone(), messages.processCreated());
-            HistoryUtils.newHistory(IngestProcess.RESOLVER);
+            HistoryUtils.newHistory(   IngestProcess.RESOLVER);
           }
         });
     } else {
@@ -190,9 +190,9 @@
   public void cancel() {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     if (selectedItems.getLastHistory().isEmpty()) {
-      HistoryUtils.newHistory(IngestProcess.RESOLVER);
+      HistoryUtils.newHistory(   IngestProcess.RESOLVER);
     } else {
-      HistoryUtils.newHistory(selectedItems.getLastHistory());
+      HistoryUtils.newHistory(   selectedItems.getLastHistory());
     }
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/VerifyEmail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/VerifyEmail.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/VerifyEmail.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/VerifyEmail.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/VerifyEmail.java	
@@ -64,7 +64,7 @@
         recoverLogin.setValuesAndHide(historyTokens.get(0), historyTokens.get(1));
         callback.onSuccess(recoverLogin);
       } else {
-        HistoryUtils.newHistory(Login.RESOLVER);
+        HistoryUtils.newHistory(   Login.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -78,7 +78,7 @@
           if (user.isGuest()) {
             callback.onSuccess(true);
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
             callback.onSuccess(null);
           }
         }
@@ -148,7 +148,7 @@
 
       @Override
       public void onClick(ClickEvent event) {
-        HistoryUtils.newHistory(Login.RESOLVER);
+        HistoryUtils.newHistory(   Login.RESOLVER);
       }
     });
 
@@ -231,12 +231,12 @@
 
                 @Override
                 public void onSuccess(Void result) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
 
                 @Override
                 public void onFailure(Throwable caught) {
-                  HistoryUtils.newHistory(Login.RESOLVER);
+                  HistoryUtils.newHistory(   Login.RESOLVER);
                 }
               });
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationInformationActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationInformationActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationInformationActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationInformationActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RepresentationInformationActions.java	
@@ -152,8 +152,8 @@
         @Override
         public void onSuccess(final SelectedItems<RepresentationInformation> selectedItems) {
           if (selectedItems != null) {
-            String filtertoAdd = HistoryUtils.getCurrentHistoryPath()
-              .get(HistoryUtils.getCurrentHistoryPath().size() - 1);
+            String filtertoAdd = HistoryUtils.getCurrentHistoryPath (   )
+              .get(HistoryUtils.getCurrentHistoryPath (   ).size() - 1);
 
             BrowserService.Util.getInstance().updateRepresentationInformationListWithFilter(selectedItems, filtertoAdd,
               new NoAsyncCallback<Job>() {
@@ -170,7 +170,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -190,8 +190,8 @@
   private void associateWithNew(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateRepresentationInformation.RESOLVER);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateRepresentationInformation.RESOLVER);
   }
 
   @Override
@@ -225,8 +225,8 @@
   private void startProcess(SelectedItems<RepresentationInformation> objects, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton.getInstance().setSelectedItems(objects);
-    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    LastSelectedItemsSingleton.getInstance().setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void download(RepresentationInformation object, AsyncCallback<ActionImpact> callback) {
@@ -254,7 +254,7 @@
                   @Override
                   public void onFailure(Throwable caught) {
                     callback.onFailure(caught);
-                    HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                    HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                   }
 
                   @Override
@@ -279,7 +279,7 @@
                         @Override
                         public void onSuccess(final Void nothing) {
                           doActionCallbackNone();
-                          HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                          HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                         }
                       });
                   }
@@ -294,13 +294,13 @@
   private void create(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateRepresentationInformation.RESOLVER);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateRepresentationInformation.RESOLVER);
   }
 
   private void edit(RepresentationInformation object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(EditRepresentationInformation.RESOLVER, object.getId());
+    HistoryUtils.newHistory(   EditRepresentationInformation.RESOLVER, object.getId());
   }
 
   @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisposalConfirmationActions.java	
@@ -78,7 +78,7 @@
   // ACTIONS
   private void newConfirmation(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(CreateDisposalConfirmation.RESOLVER);
+    HistoryUtils.newHistory(   CreateDisposalConfirmation.RESOLVER);
   }
 
   @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/ActionProcess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/ActionProcess.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/ActionProcess.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/ActionProcess.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/process/ActionProcess.java	
@@ -111,7 +111,7 @@
     } else if (historyTokens.size() > 1 && historyTokens.get(0).equals(ShowJob.RESOLVER.getHistoryToken())) {
       ShowJob.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Profile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Profile.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Profile.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Profile.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/Profile.java	
@@ -148,13 +148,13 @@
               @Override
               public void onSuccess(User updatedUser) {
                 UserLogin.getInstance().updateLoggedUser(updatedUser);
-                HistoryUtils.newHistory(Welcome.RESOLVER);
+                HistoryUtils.newHistory(   Welcome.RESOLVER);
               }
             });
         }
       }
     } else {
-      HistoryUtils.newHistory(Welcome.RESOLVER);
+      HistoryUtils.newHistory(   Welcome.RESOLVER);
     }
   }
 
@@ -164,7 +164,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(Welcome.RESOLVER);
+    HistoryUtils.newHistory(   Welcome.RESOLVER);
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/TransitiveDisposalHoldsPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/TransitiveDisposalHoldsPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/TransitiveDisposalHoldsPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/TransitiveDisposalHoldsPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/TransitiveDisposalHoldsPanel.java	
@@ -116,7 +116,7 @@
           history.add(aipId);
         }
 
-        HistoryUtils.newHistory(Search.RESOLVER, history);
+        HistoryUtils.newHistory(   Search.RESOLVER, history);
       }
     });
     panelBody.add(tableTransitiveHolds);
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RiskActions.java	
@@ -171,15 +171,15 @@
 
   private void history(IndexedRisk object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(RiskHistory.RESOLVER, object.getId());
+    HistoryUtils.newHistory(   RiskHistory.RESOLVER, object.getId());
   }
 
   private void startProcess(SelectedItems<IndexedRisk> objects, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     selectedItems.setSelectedItems(objects);
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void remove(SelectedItems<IndexedRisk> objects, AsyncCallback<ActionImpact> callback) {
@@ -199,7 +199,7 @@
                   @Override
                   public void onFailure(Throwable caught) {
                     callback.onFailure(caught);
-                    HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                    HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                   }
 
                   @Override
@@ -222,7 +222,7 @@
                       @Override
                       public void onSuccess(final Void nothing) {
                         doActionCallbackNone();
-                        HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                        HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                       }
                     });
                   }
@@ -238,12 +238,12 @@
 
   private void create(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(CreateRisk.RESOLVER);
+    HistoryUtils.newHistory(   CreateRisk.RESOLVER);
   }
 
   private void edit(IndexedRisk object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(EditRisk.RESOLVER, object.getId());
+    HistoryUtils.newHistory(   EditRisk.RESOLVER, object.getId());
   }
 
   @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditUser.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditUser.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditUser.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditUser.java	
@@ -67,7 +67,7 @@
           }
         });
       } else {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -172,12 +172,12 @@
 
               @Override
               public void onSuccess(Void result) {
-                HistoryUtils.newHistory(MemberManagement.RESOLVER);
+                HistoryUtils.newHistory(   MemberManagement.RESOLVER);
               }
             });
         }
       } else {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
       }
     }
   }
@@ -192,7 +192,7 @@
         @Override
         public void onSuccess(Void result) {
           BrowserService.Util.getInstance().deactivateUserAccessKeys(user.getId(), new NoAsyncCallback<Void>());
-          HistoryUtils.newHistory(MemberManagement.RESOLVER);
+          HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         }
 
         @Override
@@ -205,7 +205,7 @@
 
   @UiHandler("buttonAddAccessKey")
   void buttonAddAccessKeyHandler(ClickEvent e) {
-    HistoryUtils.newHistory(CreateAccessKey.RESOLVER, user.getName());
+    HistoryUtils.newHistory(   CreateAccessKey.RESOLVER, user.getName());
   }
 
   @UiHandler("buttonRemove")
@@ -220,7 +220,7 @@
               @Override
               public void onSuccess(Void result) {
                 BrowserService.Util.getInstance().deleteUserAccessKeys(user.getId(), new NoAsyncCallback<Void>());
-                HistoryUtils.newHistory(MemberManagement.RESOLVER);
+                HistoryUtils.newHistory(   MemberManagement.RESOLVER);
               }
 
               @Override
@@ -244,7 +244,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowUser.RESOLVER, user.getId());
+    HistoryUtils.newHistory(   ShowUser.RESOLVER, user.getId());
   }
 
   private void errorMessage(Throwable caught, User modifiedUser) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalHoldsPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalHoldsPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalHoldsPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalHoldsPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalHoldsPanel.java	
@@ -132,7 +132,7 @@
       DisposalHoldAIPMetadata selectedObject = tableHolds.getSelectionModel().getSelectedObject();
       if (selectedObject != null) {
         List<String> path = HistoryUtils.getHistory(ShowDisposalHold.RESOLVER.getHistoryPath(), selectedObject.getId());
-        HistoryUtils.newHistory(path);
+        HistoryUtils.newHistory(   path);
       }
     });
     panelBody.add(tableHolds);
@@ -172,7 +172,7 @@
             BrowserService.Util.getInstance().disassociateDisposalHold(aips, null, true, new AsyncCallback<Job>() {
               @Override
               public void onFailure(Throwable caught) {
-                HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                HistoryUtils.newHistory(   InternalProcess.RESOLVER);
               }
 
               @Override
@@ -195,7 +195,7 @@
 
                   @Override
                   public void onSuccess(final Void nothing) {
-                    HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                    HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                   }
                 });
               }
@@ -216,7 +216,7 @@
               override, new AsyncCallback<Job>() {
                 @Override
                 public void onFailure(Throwable caught) {
-                  HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                  HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                 }
 
                 @Override
@@ -239,7 +239,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisseminationActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisseminationActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisseminationActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisseminationActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/DisseminationActions.java	
@@ -7,11 +7,13 @@
  */
 package org.roda.wui.client.common.actions;
 
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.regexp.shared.RegExp;
+import com.google.gwt.safehtml.shared.SafeUri;
+import com.google.gwt.user.client.History;
+import com.google.gwt.user.client.Window;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.index.select.SelectedItems;
 import org.roda.core.data.v2.ip.IndexedDIP;
@@ -32,14 +34,10 @@
 import org.roda.wui.common.client.tools.RestUtils;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.regexp.shared.RegExp;
-import com.google.gwt.safehtml.shared.SafeUri;
-import com.google.gwt.user.client.History;
-import com.google.gwt.user.client.Window;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-
-import config.i18n.client.ClientMessages;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 
 public class DisseminationActions extends AbstractActionable<IndexedDIP> {
 
@@ -172,7 +170,7 @@
                           @Override
                           public void onSuccess(final Void nothing) {
                             doActionCallbackNone();
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                           }
                         });
                       }
@@ -217,7 +215,7 @@
                           @Override
                           public void onSuccess(final Void nothing) {
                             doActionCallbackNone();
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                           }
                         });
                       }
@@ -237,23 +235,23 @@
   private void newProcess(SelectedItems<IndexedDIP> selected, AsyncCallback<ActionImpact> callback) {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     selectedItems.setSelectedItems(selected);
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
     callback.onSuccess(ActionImpact.UPDATED);
   }
 
   private void updatePermissions(IndexedDIP dip, AsyncCallback<ActionImpact> callback) {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(BrowseTop.RESOLVER, EditPermissions.DIP_RESOLVER.getHistoryToken(), dip.getId());
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   BrowseTop.RESOLVER, EditPermissions.DIP_RESOLVER.getHistoryToken(), dip.getId());
     callback.onSuccess(ActionImpact.UPDATED);
   }
 
   private void updatePermissions(SelectedItems<IndexedDIP> dips, AsyncCallback<ActionImpact> callback) {
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
     LastSelectedItemsSingleton.getInstance().setSelectedItems(dips);
-    HistoryUtils.newHistory(BrowseTop.RESOLVER, EditPermissions.DIP_RESOLVER.getHistoryToken());
+    HistoryUtils.newHistory(   BrowseTop.RESOLVER, EditPermissions.DIP_RESOLVER.getHistoryToken());
     callback.onSuccess(ActionImpact.UPDATED);
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowGroup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowGroup.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowGroup.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowGroup.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowGroup.java	
@@ -63,7 +63,7 @@
           }
         });
       } else {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         callback.onSuccess(null);
       }
 
@@ -137,7 +137,7 @@
         @Override
         public void onSuccess(Actionable.ActionImpact result) {
           if (result.equals(Actionable.ActionImpact.DESTROYED)) {
-            HistoryUtils.newHistory(MemberManagement.RESOLVER);
+            HistoryUtils.newHistory(   MemberManagement.RESOLVER);
           }
         }
       });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowNotification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowNotification.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowNotification.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowNotification.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowNotification.java	
@@ -67,7 +67,7 @@
             }
           });
       } else {
-        HistoryUtils.newHistory(NotificationRegister.RESOLVER);
+        HistoryUtils.newHistory(   NotificationRegister.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -189,7 +189,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(NotificationRegister.RESOLVER);
+    HistoryUtils.newHistory(   NotificationRegister.RESOLVER);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RODAMemberActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RODAMemberActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RODAMemberActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RODAMemberActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/RODAMemberActions.java	
@@ -156,7 +156,7 @@
         @Override
         public void onSuccess(Void result) {
           doActionCallbackUpdated();
-          HistoryUtils.newHistory(MemberManagement.RESOLVER.getHistoryPath());
+          HistoryUtils.newHistory(   MemberManagement.RESOLVER.getHistoryPath());
         }
       });
   }
@@ -164,9 +164,9 @@
   private void edit(RODAMember object, AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
     if (object.isUser()) {
-      HistoryUtils.newHistory(EditUser.RESOLVER, object.getId());
+      HistoryUtils.newHistory(   EditUser.RESOLVER, object.getId());
     } else {
-      HistoryUtils.newHistory(EditGroup.RESOLVER, object.getId());
+      HistoryUtils.newHistory(   EditGroup.RESOLVER, object.getId());
     }
   }
 
@@ -176,7 +176,7 @@
         @Override
         public void onSuccess(Void result) {
           doActionCallbackUpdated();
-          HistoryUtils.newHistory(MemberManagement.RESOLVER.getHistoryPath());
+          HistoryUtils.newHistory(   MemberManagement.RESOLVER.getHistoryPath());
         }
       });
   }
@@ -206,12 +206,12 @@
 
   private void createUser(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(CreateUser.RESOLVER.getHistoryPath());
+    HistoryUtils.newHistory(   CreateUser.RESOLVER.getHistoryPath());
   }
 
   private void createGroup(AsyncCallback<ActionImpact> callback) {
     callback.onSuccess(ActionImpact.NONE);
-    HistoryUtils.newHistory(CreateGroup.RESOLVER.getHistoryPath());
+    HistoryUtils.newHistory(   CreateGroup.RESOLVER.getHistoryPath());
   }
 
   @Override
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowLogEntry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowLogEntry.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowLogEntry.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowLogEntry.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/ShowLogEntry.java	
@@ -68,7 +68,7 @@
           });
 
       } else {
-        HistoryUtils.newHistory(UserLog.RESOLVER);
+        HistoryUtils.newHistory(   UserLog.RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalPolicyAssociationPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalPolicyAssociationPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalPolicyAssociationPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalPolicyAssociationPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/association/DisposalPolicyAssociationPanel.java	
@@ -140,7 +140,7 @@
     disposalPolicySummaryPanel.setText(DisposalPolicyUtils.getDisposalPolicySummaryText(aip));
 
     BreadcrumbItem item = new BreadcrumbItem(messages.disposalPolicyTitle(),
-      () -> HistoryUtils.newHistory(DisposalPolicyAssociationPanel.RESOLVER, aip.getId()));
+      () -> HistoryUtils.newHistory(   DisposalPolicyAssociationPanel.RESOLVER, aip.getId()));
     List<BreadcrumbItem> aipBreadcrumbs = BreadcrumbUtils.getAipBreadcrumbs(bundle.getAIPAncestors(), bundle.getAip());
     aipBreadcrumbs.add(item);
     navigationToolbar.updateBreadcrumb(bundle);
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserDataPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserDataPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserDataPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserDataPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/UserDataPanel.java	
@@ -303,7 +303,7 @@
           // groups he belongs to.
         } else {
           AsyncCallbackUtils.defaultFailureTreatment(caught);
-          HistoryUtils.newHistory(MemberManagement.RESOLVER);
+          HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         }
       }
     });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Help.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Help.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Help.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Help.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Help.java	
@@ -84,7 +84,7 @@
       init();
       callback.onSuccess(layout);
     } else {
-      HistoryUtils.newHistory(Help.RESOLVER);
+      HistoryUtils.newHistory(   Help.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/CreateDescriptiveMetadata.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/CreateDescriptiveMetadata.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/CreateDescriptiveMetadata.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/CreateDescriptiveMetadata.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/CreateDescriptiveMetadata.java	
@@ -97,7 +97,7 @@
 
         callback.onSuccess(create);
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -405,9 +405,9 @@
             errors.setVisible(false);
             Toast.showInfo(messages.dialogSuccess(), messages.metadataFileCreated());
             if (representationId == null) {
-              HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+              HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
             } else {
-              HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, aipId, representationId);
+              HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, aipId, representationId);
             }
           }
         });
@@ -445,22 +445,22 @@
 
           @Override
           public void onFailure(Throwable caught) {
-            HistoryUtils.newHistory(InternalProcess.RESOLVER);
+            HistoryUtils.newHistory(   InternalProcess.RESOLVER);
           }
 
           @Override
           public void onSuccess(Job result) {
-            HistoryUtils.newHistory(LastSelectedItemsSingleton.getInstance().getLastHistory());
+            HistoryUtils.newHistory(   LastSelectedItemsSingleton.getInstance().getLastHistory());
           }
         });
       } else {
-        HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, aipId, representationId);
+        HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, aipId, representationId);
       }
     } else {
       if (representationId == null) {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
       } else {
-        HistoryUtils.newHistory(BrowseRepresentation.RESOLVER, aipId, representationId);
+        HistoryUtils.newHistory(   BrowseRepresentation.RESOLVER, aipId, representationId);
       }
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/FileActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/FileActions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/FileActions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/FileActions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/actions/FileActions.java	
@@ -7,12 +7,15 @@
  */
 package org.roda.wui.client.common.actions;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.logical.shared.ValueChangeEvent;
+import com.google.gwt.event.logical.shared.ValueChangeHandler;
+import com.google.gwt.regexp.shared.RegExp;
+import com.google.gwt.safehtml.shared.SafeUri;
+import com.google.gwt.user.client.Timer;
+import com.google.gwt.user.client.Window;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.exceptions.AlreadyExistsException;
 import org.roda.core.data.exceptions.NotFoundException;
@@ -40,16 +43,7 @@
 import org.roda.wui.common.client.tools.RestUtils;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.logical.shared.ValueChangeEvent;
-import com.google.gwt.event.logical.shared.ValueChangeHandler;
-import com.google.gwt.regexp.shared.RegExp;
-import com.google.gwt.safehtml.shared.SafeUri;
-import com.google.gwt.user.client.Timer;
-import com.google.gwt.user.client.Window;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-
-import config.i18n.client.ClientMessages;
+import java.util.*;
 
 public class FileActions extends AbstractActionable<IndexedFile> {
 
@@ -332,7 +326,7 @@
                       @Override
                       public void onSuccess(final Void nothing) {
                         doActionCallbackNone();
-                        HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                        HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                       }
                     });
                   }
@@ -340,7 +334,7 @@
                   @Override
                   public void onFailureImpl(Throwable caught) {
                     super.onFailureImpl(caught);
-                    HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                    HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                   }
                 });
             }
@@ -469,8 +463,8 @@
     callback.onSuccess(ActionImpact.NONE);
     LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
     selectedItems.setSelectedItems(selected);
-    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
-    HistoryUtils.newHistory(CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
+    selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
+    HistoryUtils.newHistory(   CreateSelectedJob.RESOLVER, RodaConstants.JOB_PROCESS_ACTION);
   }
 
   private void identifyFormats(IndexedFile file, final AsyncCallback<ActionImpact> callback) {
@@ -492,7 +486,7 @@
           @Override
           public void onSuccess(final Void nothing) {
             doActionCallbackNone();
-            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
           }
         });
       }
@@ -578,7 +572,7 @@
                               @Override
                               public void run() {
                                 doActionCallbackNone();
-                                HistoryUtils.newHistory(HistoryUtils.getCurrentHistoryPath());
+                                HistoryUtils.newHistory(   HistoryUtils.getCurrentHistoryPath (   ));
                               }
                             };
 
@@ -588,7 +582,7 @@
                           @Override
                           public void onSuccess(final Void nothing) {
                             doActionCallbackNone();
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                           }
                         });
                     }
@@ -596,7 +590,7 @@
                     @Override
                     public void onFailure(Throwable caught) {
                       callback.onFailure(caught);
-                      HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                      HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                     }
                   });
                 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Welcome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Welcome.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Welcome.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Welcome.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/welcome/Welcome.java	
@@ -84,7 +84,7 @@
       init();
       callback.onSuccess(layout);
     } else {
-      HistoryUtils.newHistory(Welcome.RESOLVER);
+      HistoryUtils.newHistory(   Welcome.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditPermissions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditPermissions.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditPermissions.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditPermissions.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditPermissions.java	
@@ -7,15 +7,23 @@
  */
 package org.roda.wui.client.browse;
 
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Set;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.core.client.Scheduler;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.event.dom.client.ClickHandler;
+import com.google.gwt.event.logical.shared.AttachEvent;
+import com.google.gwt.event.logical.shared.AttachEvent.Handler;
+import com.google.gwt.event.logical.shared.ValueChangeEvent;
+import com.google.gwt.event.logical.shared.ValueChangeHandler;
+import com.google.gwt.regexp.shared.RegExp;
+import com.google.gwt.safehtml.shared.SafeHtmlUtils;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.uibinder.client.UiHandler;
+import com.google.gwt.user.client.Command;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.common.RodaConstants;
 import org.roda.core.data.v2.index.filter.Filter;
 import org.roda.core.data.v2.index.filter.NotSimpleFilterParameter;
@@ -44,30 +52,8 @@
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 import org.roda.wui.common.client.widgets.Toast;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.core.client.Scheduler;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.event.dom.client.ClickHandler;
-import com.google.gwt.event.logical.shared.AttachEvent;
-import com.google.gwt.event.logical.shared.AttachEvent.Handler;
-import com.google.gwt.event.logical.shared.ValueChangeEvent;
-import com.google.gwt.event.logical.shared.ValueChangeHandler;
-import com.google.gwt.regexp.shared.RegExp;
-import com.google.gwt.safehtml.shared.SafeHtmlUtils;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.uibinder.client.UiHandler;
-import com.google.gwt.user.client.Command;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.user.client.ui.CheckBox;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.HTML;
-import com.google.gwt.user.client.ui.Label;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.*;
+import java.util.Map.Entry;
 
 public class EditPermissions extends Composite {
 
@@ -82,7 +68,7 @@
 
             @Override
             public void onFailure(Throwable caught) {
-              HistoryUtils.newHistory(BrowseTop.RESOLVER);
+              HistoryUtils.newHistory(   BrowseTop.RESOLVER);
               callback.onSuccess(null);
             }
 
@@ -105,7 +91,7 @@
 
               @Override
               public void onFailure(Throwable caught) {
-                HistoryUtils.newHistory(BrowseTop.RESOLVER);
+                HistoryUtils.newHistory(   BrowseTop.RESOLVER);
                 callback.onSuccess(null);
               }
 
@@ -118,7 +104,7 @@
             });
         }
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -150,7 +136,7 @@
 
             @Override
             public void onFailure(Throwable caught) {
-              HistoryUtils.newHistory(BrowseDIP.RESOLVER, dipId);
+              HistoryUtils.newHistory(   BrowseDIP.RESOLVER, dipId);
               callback.onSuccess(null);
             }
 
@@ -170,7 +156,7 @@
 
               @Override
               public void onFailure(Throwable caught) {
-                HistoryUtils.newHistory(BrowseTop.RESOLVER);
+                HistoryUtils.newHistory(   BrowseTop.RESOLVER);
                 callback.onSuccess(null);
               }
 
@@ -183,7 +169,7 @@
             });
         }
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -490,7 +476,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -512,7 +498,7 @@
 
                     @Override
                     public void onSuccess(final Void nothing) {
-                      HistoryUtils.newHistory(ShowJob.RESOLVER, result.getId());
+                      HistoryUtils.newHistory(   ShowJob.RESOLVER, result.getId());
                     }
                   });
                 }
@@ -541,7 +527,7 @@
         HistoryUtils.openBrowse((IndexedDIP) objects.get(0));
       }
     } else {
-      HistoryUtils.newHistory(BrowseTop.RESOLVER);
+      HistoryUtils.newHistory(   BrowseTop.RESOLVER);
     }
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/RecoverLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/RecoverLogin.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/RecoverLogin.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/RecoverLogin.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/RecoverLogin.java	
@@ -14,7 +14,6 @@
 import java.util.List;
 
 import org.roda.core.data.common.RodaConstants;
-import org.roda.core.data.exceptions.NotFoundException;
 import org.roda.core.data.v2.user.User;
 import org.roda.wui.client.common.UserLogin;
 import org.roda.wui.client.common.dialogs.Dialogs;
@@ -69,7 +68,7 @@
           if (user.isGuest()) {
             callback.onSuccess(true);
           } else {
-            HistoryUtils.newHistory(Welcome.RESOLVER);
+            HistoryUtils.newHistory(   Welcome.RESOLVER);
             callback.onSuccess(null);
           }
         }
@@ -127,7 +126,7 @@
       }
     });
 
-    cancel.addClickHandler(event -> HistoryUtils.newHistory(Login.RESOLVER));
+    cancel.addClickHandler(event -> HistoryUtils.newHistory(   Login.RESOLVER));
 
     String recaptchakey = ConfigurationManager.getString(RodaConstants.UI_GOOGLE_RECAPTCHA_CODE_PROPERTY);
     if (StringUtils.isNotBlank(recaptchakey)) {
@@ -221,12 +220,12 @@
 
               @Override
               public void onFailure(Throwable caught) {
-                HistoryUtils.newHistory(Login.RESOLVER);
+                HistoryUtils.newHistory(   Login.RESOLVER);
               }
 
               @Override
               public void onSuccess(Void result) {
-                HistoryUtils.newHistory(Login.RESOLVER);
+                HistoryUtils.newHistory(   Login.RESOLVER);
               }
             });
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditGroup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditGroup.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditGroup.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditGroup.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/EditGroup.java	
@@ -59,7 +59,7 @@
           }
         });
       } else {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
         callback.onSuccess(null);
       }
 
@@ -130,7 +130,7 @@
 
           @Override
           public void onSuccess(Void result) {
-            HistoryUtils.newHistory(MemberManagement.RESOLVER);
+            HistoryUtils.newHistory(   MemberManagement.RESOLVER);
           }
 
           @Override
@@ -140,7 +140,7 @@
         });
       }
     } else {
-      HistoryUtils.newHistory(MemberManagement.RESOLVER);
+      HistoryUtils.newHistory(   MemberManagement.RESOLVER);
     }
   }
 
@@ -150,7 +150,7 @@
 
       @Override
       public void onSuccess(Void result) {
-        HistoryUtils.newHistory(MemberManagement.RESOLVER);
+        HistoryUtils.newHistory(   MemberManagement.RESOLVER);
       }
 
       @Override
@@ -166,7 +166,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(ShowGroup.RESOLVER, group.getId());
+    HistoryUtils.newHistory(   ShowGroup.RESOLVER, group.getId());
   }
 
   private void errorMessage(Throwable caught) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/EditAccessKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/EditAccessKey.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/EditAccessKey.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/EditAccessKey.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/EditAccessKey.java	
@@ -107,7 +107,7 @@
       BrowserServiceImpl.Util.getInstance().updateAccessKey(this.accessKey, new NoAsyncCallback<AccessKey>() {
         @Override
         public void onSuccess(AccessKey accessKey) {
-          HistoryUtils.newHistory(EditUser.RESOLVER, accessKey.getUserName());
+          HistoryUtils.newHistory(   EditUser.RESOLVER, accessKey.getUserName());
         }
       });
     }
@@ -119,6 +119,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(EditUser.RESOLVER, accessKey.getUserName());
+    HistoryUtils.newHistory(   EditUser.RESOLVER, accessKey.getUserName());
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyTablePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyTablePanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyTablePanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyTablePanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyTablePanel.java	
@@ -78,7 +78,7 @@
         if (selectedObject != null) {
           table.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowAccessKey.RESOLVER.getHistoryPath(), selectedObject.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/ShowAccessKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/ShowAccessKey.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/ShowAccessKey.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/ShowAccessKey.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/ShowAccessKey.java	
@@ -206,7 +206,7 @@
 
   @UiHandler("buttonEdit")
   void buttonApplyHandler(ClickEvent e) {
-    HistoryUtils.newHistory(EditAccessKey.RESOLVER, accessKey.getId());
+    HistoryUtils.newHistory(   EditAccessKey.RESOLVER, accessKey.getId());
   }
 
   @UiHandler("buttonDelete")
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/CreateAccessKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/CreateAccessKey.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/CreateAccessKey.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/CreateAccessKey.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/CreateAccessKey.java	
@@ -125,7 +125,7 @@
           AccessKeyDialogs.showAccessKeyDialog(messages.accessKeyLabel(), accessKey, new NoAsyncCallback<Boolean>() {
             @Override
             public void onSuccess(Boolean result) {
-              HistoryUtils.newHistory(EditUser.RESOLVER, accessKey.getUserName());
+              HistoryUtils.newHistory(   EditUser.RESOLVER, accessKey.getUserName());
             }
           });
         }
@@ -139,6 +139,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(EditUser.RESOLVER, accessKey.getUserName());
+    HistoryUtils.newHistory(   EditUser.RESOLVER, accessKey.getUserName());
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyManagement.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyManagement.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyManagement.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/access/AccessKeyManagement.java	
@@ -7,11 +7,16 @@
  */
 package org.roda.wui.client.management.access;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.event.dom.client.ClickHandler;
 import com.google.gwt.safehtml.shared.SafeHtmlUtils;
-import com.google.gwt.user.client.ui.HTML;
-import com.google.gwt.user.client.ui.Label;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.cellview.client.TextColumn;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.*;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.accessKey.AccessKey;
 import org.roda.core.data.v2.accessKey.AccessKeys;
 import org.roda.wui.client.browse.BrowserService;
@@ -23,23 +28,10 @@
 import org.roda.wui.common.client.HistoryResolver;
 import org.roda.wui.common.client.tools.HistoryUtils;
 import org.roda.wui.common.client.tools.ListUtils;
-
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.event.dom.client.ClickHandler;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.cellview.client.TextColumn;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Button;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.FlowPanel;
-import com.google.gwt.user.client.ui.ScrollPanel;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
 import org.roda.wui.common.client.widgets.HTMLWidgetWrapper;
 
+import java.util.List;
+
 /**
  * @author Gabriel Barros <gbarros@keep.pt>
  */
@@ -120,7 +112,7 @@
     createNewAccessKeyBtn.addClickHandler(new ClickHandler() {
       @Override
       public void onClick(ClickEvent clickEvent) {
-        HistoryUtils.newHistory(CreateAccessKey.RESOLVER);
+        HistoryUtils.newHistory(   CreateAccessKey.RESOLVER);
       }
     });
 
@@ -145,7 +137,7 @@
         if (selectedObject != null) {
           table.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowAccessKey.RESOLVER.getHistoryPath(), selectedObject.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
@@ -193,7 +185,7 @@
     } else if (historyTokens.get(0).equals(EditAccessKey.RESOLVER.getHistoryToken())) {
       EditAccessKey.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/ShowDisposalConfirmation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/ShowDisposalConfirmation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/ShowDisposalConfirmation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/ShowDisposalConfirmation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/ShowDisposalConfirmation.java	
@@ -116,7 +116,7 @@
           }
         });
     } else {
-      HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+      HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/RepresentationInformationHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/RepresentationInformationHelper.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/RepresentationInformationHelper.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/RepresentationInformationHelper.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/RepresentationInformationHelper.java	
@@ -61,7 +61,7 @@
           @Override
           public void onSuccess(Pair<String, Integer> pair) {
             LastSelectedItemsSingleton selectedItems = LastSelectedItemsSingleton.getInstance();
-            selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath());
+            selectedItems.setLastHistory(HistoryUtils.getCurrentHistoryPath (   ));
             icon.removeStyleName("representationInformationMissing");
 
             if (StringUtils.isBlank(iconCssClass)) {
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/CreateDisposalConfirmationDataPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/CreateDisposalConfirmationDataPanel.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/CreateDisposalConfirmationDataPanel.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/CreateDisposalConfirmationDataPanel.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/confirmations/CreateDisposalConfirmationDataPanel.java	
@@ -139,7 +139,7 @@
     btnCancel.addStyleName("btn btn-block btn-default btn-times-circle");
     btnCancel.addClickHandler(e -> {
       CreateDisposalConfirmation.getInstance().clear();
-      HistoryUtils.newHistory(ShowDisposalConfirmation.RESOLVER);
+      HistoryUtils.newHistory(   ShowDisposalConfirmation.RESOLVER);
     });
 
     if (PermissionClientUtils.hasPermissions(RodaConstants.PERMISSION_METHOD_CREATE_DISPOSAL_CONFIRMATION)) {
@@ -163,13 +163,13 @@
     SelectedItems<IndexedAIP> selectedItemsList = CreateDisposalConfirmation.getInstance().getSelected();
     if (selectedItemsList == null) {
       Toast.showInfo("Error", "Error");
-      HistoryUtils.newHistory(ShowDisposalConfirmation.RESOLVER);
+      HistoryUtils.newHistory(   ShowDisposalConfirmation.RESOLVER);
     } else {
       BrowserService.Util.getInstance().createDisposalConfirmationReport(selectedItemsList, title.getText(),
         disposalConfirmationExtra, new AsyncCallback<Job>() {
           @Override
           public void onFailure(Throwable throwable) {
-            HistoryUtils.newHistory(InternalProcess.RESOLVER);
+            HistoryUtils.newHistory(   InternalProcess.RESOLVER);
           }
 
           @Override
@@ -180,13 +180,13 @@
               public void onFailure(Throwable caught) {
                 Toast.showInfo(messages.runningInBackgroundTitle(), messages.runningInBackgroundDescription());
                 CreateDisposalConfirmation.getInstance().clear();
-                HistoryUtils.newHistory(DisposalConfirmations.RESOLVER);
+                HistoryUtils.newHistory(   DisposalConfirmations.RESOLVER);
               }
 
               @Override
               public void onSuccess(final Void nothing) {
                 CreateDisposalConfirmation.getInstance().clear();
-                HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
               }
             });
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/dialogs/DisposalDialogs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/dialogs/DisposalDialogs.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/dialogs/DisposalDialogs.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/dialogs/DisposalDialogs.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/common/dialogs/DisposalDialogs.java	
@@ -128,7 +128,7 @@
     newHoldButton.addClickHandler(clickEvent -> {
       dialogBox.hide();
       callback.onFailure(null);
-      HistoryUtils.newHistory(CreateDisposalHold.RESOLVER);
+      HistoryUtils.newHistory(   CreateDisposalHold.RESOLVER);
     });
 
     overrideDisposalHoldButton.addClickHandler(clickEvent -> {
@@ -272,7 +272,7 @@
     newScheduleButton.addClickHandler(clickEvent -> {
       dialogBox.hide();
       callback.onFailure(null);
-      HistoryUtils.newHistory(CreateDisposalSchedule.RESOLVER);
+      HistoryUtils.newHistory(   CreateDisposalSchedule.RESOLVER);
     });
 
     cancelButton.addStyleName("btn btn-link");
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditDescriptiveMetadata.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditDescriptiveMetadata.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditDescriptiveMetadata.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditDescriptiveMetadata.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/EditDescriptiveMetadata.java	
@@ -18,11 +18,8 @@
 import java.util.TreeSet;
 
 import org.roda.core.data.common.RodaConstants;
-import org.roda.core.data.v2.notifications.Notification;
-import org.roda.core.data.v2.notifications.Notifications;
 import org.roda.core.data.v2.validation.ValidationException;
 import org.roda.core.data.v2.validation.ValidationIssue;
-import org.roda.core.plugins.PluginHelper;
 import org.roda.wui.client.browse.bundle.DescriptiveMetadataEditBundle;
 import org.roda.wui.client.browse.bundle.SupportedMetadataTypeBundle;
 import org.roda.wui.client.common.NoAsyncCallback;
@@ -31,7 +28,6 @@
 import org.roda.wui.client.common.dialogs.Dialogs;
 import org.roda.wui.client.common.utils.AsyncCallbackUtils;
 import org.roda.wui.client.common.utils.FormUtilities;
-import org.roda.wui.client.common.utils.HtmlSnippetUtils;
 import org.roda.wui.client.common.utils.JavascriptUtils;
 import org.roda.wui.client.common.utils.PermissionClientUtils;
 import org.roda.wui.common.client.HistoryResolver;
@@ -63,7 +59,6 @@
 import com.google.gwt.user.client.ui.Widget;
 
 import config.i18n.client.ClientMessages;
-import org.roda.wui.server.browse.BrowserServiceImpl;
 
 /**
  * @author Luis Faria
@@ -99,13 +94,13 @@
                   }
                 });
             } else {
-              HistoryUtils.newHistory(BrowseTop.RESOLVER, aipId);
+              HistoryUtils.newHistory(   BrowseTop.RESOLVER, aipId);
               Toast.showInfo(messages.editDescMetadataLockedTitle(), messages.editDescMetadataLockedText());
             }
           }
         });
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseAIP.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseAIP.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseAIP.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseAIP.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseAIP.java	
@@ -291,9 +291,9 @@
       navigationToolbar.withPermissions(aip.getPermissions());
       navigationToolbar.withActionImpactHandler(Actionable.ActionImpact.DESTROYED, () -> {
         if (StringUtils.isNotBlank(aip.getParentID())) {
-          HistoryUtils.newHistory(BrowseTop.RESOLVER, aip.getParentID());
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER, aip.getParentID());
         } else {
-          HistoryUtils.newHistory(BrowseTop.RESOLVER);
+          HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         }
       });
       navigationToolbar.withActionImpactHandler(Actionable.ActionImpact.UPDATED,
@@ -631,7 +631,7 @@
 
   private void newDescriptiveMetadataRedirect() {
     if (aipId != null) {
-      HistoryUtils.newHistory(BrowseTop.RESOLVER, CreateDescriptiveMetadata.RESOLVER.getHistoryToken(),
+      HistoryUtils.newHistory(   BrowseTop.RESOLVER, CreateDescriptiveMetadata.RESOLVER.getHistoryToken(),
         RodaConstants.RODA_OBJECT_AIP, aipId);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/CreateDisposalHold.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/CreateDisposalHold.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/CreateDisposalHold.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/CreateDisposalHold.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/CreateDisposalHold.java	
@@ -97,7 +97,7 @@
       BrowserServiceImpl.Util.getInstance().createDisposalHold(disposalHold, new NoAsyncCallback<DisposalHold>() {
         @Override
         public void onSuccess(DisposalHold disposalHold) {
-          HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+          HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
         }
       });
     }
@@ -110,7 +110,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+    HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditLocalInstanceConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditLocalInstanceConfiguration.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditLocalInstanceConfiguration.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditLocalInstanceConfiguration.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/EditLocalInstanceConfiguration.java	
@@ -7,8 +7,15 @@
  */
 package org.roda.wui.client.management.distributed;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.event.dom.client.ClickEvent;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.uibinder.client.UiHandler;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.synchronization.central.DistributedInstance;
 import org.roda.core.data.v2.synchronization.local.LocalInstance;
 import org.roda.wui.client.browse.BrowserService;
@@ -20,16 +27,7 @@
 import org.roda.wui.common.client.tools.ListUtils;
 import org.roda.wui.server.browse.BrowserServiceImpl;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.event.dom.client.ClickEvent;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.uibinder.client.UiHandler;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Gabriel Barros <gbarros@keep.pt>
@@ -100,7 +98,7 @@
         new NoAsyncCallback<DistributedInstance>() {
           @Override
           public void onSuccess(DistributedInstance distributedInstance) {
-            HistoryUtils.newHistory(LocalInstanceManagement.RESOLVER);
+            HistoryUtils.newHistory(   LocalInstanceManagement.RESOLVER);
           }
         });
     }
@@ -112,6 +110,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(LocalInstanceManagement.RESOLVER);
+    HistoryUtils.newHistory(   LocalInstanceManagement.RESOLVER);
   }
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/ShowPreservationEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/ShowPreservationEvent.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/ShowPreservationEvent.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/ShowPreservationEvent.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/ShowPreservationEvent.java	
@@ -84,7 +84,7 @@
           eventId);
         callback.onSuccess(preservationEvents);
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory(   BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -201,7 +201,7 @@
         public void onFailure(Throwable caught) {
           if (caught instanceof NotFoundException) {
             Toast.showError(messages.notFoundError(), messages.couldNotFindPreservationEvent());
-            HistoryUtils.newHistory(ListUtils.concat(PreservationEvents.PLANNING_RESOLVER.getHistoryPath()));
+            HistoryUtils.newHistory(   ListUtils.concat(PreservationEvents.PLANNING_RESOLVER.getHistoryPath()));
           } else {
             AsyncCallbackUtils.defaultFailureTreatment(caught);
           }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/ShowDisposalHold.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/ShowDisposalHold.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/ShowDisposalHold.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/ShowDisposalHold.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/ShowDisposalHold.java	
@@ -227,7 +227,7 @@
       editHoldBtn.addStyleName("btn btn-block btn-edit");
       editHoldBtn.setText(messages.editButton());
       editHoldBtn
-        .addClickHandler(clickEvent -> HistoryUtils.newHistory(EditDisposalHold.RESOLVER, disposalHold.getId()));
+        .addClickHandler(clickEvent -> HistoryUtils.newHistory(   EditDisposalHold.RESOLVER, disposalHold.getId()));
 
       buttonsPanel.add(editHoldBtn);
 
@@ -241,7 +241,7 @@
           BrowserService.Util.getInstance().updateDisposalHold(disposalHold, new NoAsyncCallback<DisposalHold>() {
             @Override
             public void onSuccess(DisposalHold disposalHold) {
-              HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+              HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
             }
           });
         } else {
@@ -260,7 +260,7 @@
                     new AsyncCallback<Job>() {
                       @Override
                       public void onFailure(Throwable throwable) {
-                        HistoryUtils.newHistory(InternalProcess.RESOLVER);
+                        HistoryUtils.newHistory(   InternalProcess.RESOLVER);
                       }
 
                       @Override
@@ -284,7 +284,7 @@
 
                           @Override
                           public void onSuccess(final Void nothing) {
-                            HistoryUtils.newHistory(ShowJob.RESOLVER, job.getId());
+                            HistoryUtils.newHistory(   ShowJob.RESOLVER, job.getId());
                           }
                         });
                       }
@@ -316,7 +316,7 @@
     Button backBtn = new Button();
     backBtn.setText(messages.backButton());
     backBtn.addStyleName("btn btn-block btn-default btn-times-circle");
-    backBtn.addClickHandler(clickEvent -> HistoryUtils.newHistory(DisposalPolicy.RESOLVER));
+    backBtn.addClickHandler(clickEvent -> HistoryUtils.newHistory(   DisposalPolicy.RESOLVER));
     buttonsPanel.add(backBtn);
   }
 
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRisk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRisk.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRisk.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRisk.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/CreateRisk.java	
@@ -100,7 +100,7 @@
 
         @Override
         public void onSuccess(Risk result) {
-          HistoryUtils.newHistory(RiskRegister.RESOLVER);
+          HistoryUtils.newHistory(   RiskRegister.RESOLVER);
         }
 
       });
@@ -113,7 +113,7 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(RiskRegister.RESOLVER);
+    HistoryUtils.newHistory(   RiskRegister.RESOLVER);
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/EditDisposalHold.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/EditDisposalHold.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/EditDisposalHold.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/EditDisposalHold.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/disposal/hold/EditDisposalHold.java	
@@ -48,7 +48,7 @@
             @Override
             public void onSuccess(DisposalHold result) {
               if (DisposalHoldState.LIFTED.equals(result.getState())) {
-                HistoryUtils.newHistory(DisposalPolicy.RESOLVER);
+                HistoryUtils.newHistory(   DisposalPolicy.RESOLVER);
               } else {
                 EditDisposalHold panel = new EditDisposalHold(result);
                 callback.onSuccess(panel);
@@ -129,18 +129,18 @@
       BrowserServiceImpl.Util.getInstance().updateDisposalHold(disposalHold, new NoAsyncCallback<DisposalHold>() {
         @Override
         public void onSuccess(DisposalHold disposalHold) {
-          HistoryUtils.newHistory(ShowDisposalHold.RESOLVER, disposalHold.getId());
+          HistoryUtils.newHistory(   ShowDisposalHold.RESOLVER, disposalHold.getId());
         }
       });
     } else {
-      HistoryUtils.newHistory(ShowDisposalHold.RESOLVER, disposalHold.getId());
+      HistoryUtils.newHistory(   ShowDisposalHold.RESOLVER, disposalHold.getId());
     }
 
   }
 
   @UiHandler("buttonCancel")
   void buttonCancelHandler(ClickEvent e) {
-    HistoryUtils.newHistory(ShowDisposalHold.RESOLVER, disposalHold.getId());
+    HistoryUtils.newHistory(   ShowDisposalHold.RESOLVER, disposalHold.getId());
   }
 
 }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/DistributedInstancesManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/DistributedInstancesManagement.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/DistributedInstancesManagement.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/DistributedInstancesManagement.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/DistributedInstancesManagement.java	
@@ -124,7 +124,7 @@
     createDistributedInstanceBtn.addClickHandler(new ClickHandler() {
       @Override
       public void onClick(ClickEvent clickEvent) {
-        HistoryUtils.newHistory(CreateDistributedInstance.RESOLVER);
+        HistoryUtils.newHistory(   CreateDistributedInstance.RESOLVER);
       }
     });
 
@@ -155,7 +155,7 @@
           tableDistributedInstances.getSelectionModel().clear();
           List<String> path = HistoryUtils.getHistory(ShowDistributedInstance.RESOLVER.getHistoryPath(),
             selectedObject.getId());
-          HistoryUtils.newHistory(path);
+          HistoryUtils.newHistory(   path);
         }
       });
 
@@ -222,7 +222,7 @@
     } else if (historyTokens.get(0).equals(EditDistributedInstance.RESOLVER.getHistoryToken())) {
       EditDistributedInstance.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/LocalInstanceManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/LocalInstanceManagement.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/LocalInstanceManagement.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/LocalInstanceManagement.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/LocalInstanceManagement.java	
@@ -35,9 +35,9 @@
           @Override
           public void onSuccess(LocalInstance localInstance) {
             if (localInstance != null) {
-              HistoryUtils.newHistory(ShowLocalInstanceConfiguration.RESOLVER);
+              HistoryUtils.newHistory(   ShowLocalInstanceConfiguration.RESOLVER);
             } else {
-              HistoryUtils.newHistory(CreateLocalInstanceConfiguration.RESOLVER);
+              HistoryUtils.newHistory(   CreateLocalInstanceConfiguration.RESOLVER);
             }
           }
         });
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/PreservationAgents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/PreservationAgents.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/PreservationAgents.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/PreservationAgents.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/PreservationAgents.java	
@@ -10,8 +10,13 @@
  */
 package org.roda.wui.client.planning;
 
-import java.util.List;
-
+import com.google.gwt.core.client.GWT;
+import com.google.gwt.uibinder.client.UiBinder;
+import com.google.gwt.uibinder.client.UiField;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Composite;
+import com.google.gwt.user.client.ui.Widget;
+import config.i18n.client.ClientMessages;
 import org.roda.core.data.v2.ip.metadata.IndexedPreservationAgent;
 import org.roda.wui.client.common.UserLogin;
 import org.roda.wui.client.common.actions.PreservationAgentActions;
@@ -24,14 +29,7 @@
 import org.roda.wui.common.client.tools.HistoryUtils;
 import org.roda.wui.common.client.tools.ListUtils;
 
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.uibinder.client.UiBinder;
-import com.google.gwt.uibinder.client.UiField;
-import com.google.gwt.user.client.rpc.AsyncCallback;
-import com.google.gwt.user.client.ui.Composite;
-import com.google.gwt.user.client.ui.Widget;
-
-import config.i18n.client.ClientMessages;
+import java.util.List;
 
 /**
  * @author Luis Faria
@@ -110,7 +108,7 @@
       && historyTokens.get(0).equals(ShowPreservationAgent.RESOLVER.getHistoryToken())) {
       ShowPreservationAgent.RESOLVER.resolve(HistoryUtils.tail(historyTokens), callback);
     } else {
-      HistoryUtils.newHistory(RESOLVER);
+      HistoryUtils.newHistory(   RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRisk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRisk.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRisk.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRisk.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRisk.java	
@@ -92,7 +92,7 @@
     @Override
     public void onSuccess(Actionable.ActionImpact result) {
       if (result.equals(Actionable.ActionImpact.DESTROYED)) {
-        HistoryUtils.newHistory(RiskRegister.RESOLVER);
+        HistoryUtils.newHistory(   RiskRegister.RESOLVER);
       }
     }
   };
@@ -187,7 +187,7 @@
           }
         });
     } else {
-      HistoryUtils.newHistory(RiskRegister.RESOLVER);
+      HistoryUtils.newHistory(   RiskRegister.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseRepresentation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseRepresentation.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseRepresentation.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseRepresentation.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/browse/BrowseRepresentation.java	
@@ -1,4 +1,4 @@
-/**
+/** 
  * The contents of this file are subject to the license and copyright
  * detailed in the LICENSE file at the root of the source
  * tree and available online at
@@ -76,7 +76,7 @@
       if (historyTokens.size() == 2) {
         getAndRefresh(historyTokens.get(0), historyTokens.get(1), callback);
       } else {
-        HistoryUtils.newHistory(BrowseTop.RESOLVER);
+        HistoryUtils.newHistory (  BrowseTop.RESOLVER);
         callback.onSuccess(null);
       }
     }
@@ -121,7 +121,7 @@
         @Override
         public void onFailure(Throwable caught) {
           Toast.showError(caught.getClass().getSimpleName(), caught.getMessage());
-          HistoryUtils.newHistory(BrowseTop.RESOLVER);
+          HistoryUtils.newHistory (  BrowseTop.RESOLVER);
           callback.onSuccess(null);
         }
 
@@ -241,9 +241,9 @@
     navigationToolbar.withObject(representation);
     navigationToolbar.withPermissions(aip.getPermissions());
     navigationToolbar.withActionImpactHandler(Actionable.ActionImpact.DESTROYED,
-      () -> HistoryUtils.newHistory(BrowseTop.RESOLVER, representation.getAipId()));
+            () -> HistoryUtils.newHistory (  BrowseTop.RESOLVER, representation.getAipId()));
     navigationToolbar.withActionImpactHandler(Actionable.ActionImpact.UPDATED,
-      () -> refresh(aipId, repId, new NoAsyncCallback<>()));
+            () -> refresh(aipId, repId, new NoAsyncCallback<>()));
     navigationToolbar.build();
 
     updateLayout(bundle, state, justActive);
@@ -535,7 +535,7 @@
   }
 
   private void newRepresentationDescriptiveMetadata() {
-    HistoryUtils.newHistory(CreateDescriptiveMetadata.RESOLVER, RodaConstants.RODA_OBJECT_REPRESENTATION, aipId, repId);
+    HistoryUtils.newHistory (  CreateDescriptiveMetadata.RESOLVER, RodaConstants.RODA_OBJECT_REPRESENTATION, aipId, repId);
   }
 
   @UiHandler("newDescriptiveMetadata")
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRiskIncidence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRiskIncidence.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRiskIncidence.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRiskIncidence.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/planning/ShowRiskIncidence.java	
@@ -169,7 +169,7 @@
         @Override
         public void onSuccess(Actionable.ActionImpact result) {
           if (result.equals(Actionable.ActionImpact.DESTROYED)) {
-            HistoryUtils.newHistory(ShowRisk.RESOLVER, incidence.getRiskId());
+            HistoryUtils.newHistory(   ShowRisk.RESOLVER, incidence.getRiskId());
           }
         }
       }).buildListWithObjects(new ActionableObject<>(incidence)));
@@ -249,7 +249,7 @@
           }
         });
     } else {
-      HistoryUtils.newHistory(RiskIncidenceRegister.RESOLVER);
+      HistoryUtils.newHistory(   RiskIncidenceRegister.RESOLVER);
       callback.onSuccess(null);
     }
   }
Index: roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateDistributedInstance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateDistributedInstance.java b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateDistributedInstance.java
--- a/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateDistributedInstance.java	
+++ b/roda-ui/roda-wui/src/main/java/org/roda/wui/client/management/distributed/CreateDistributedInstance.java	
@@ -106,7 +106,7 @@
               new NoAsyncCallback<AccessKey>() {
                 @Override
                 public void onSuccess(AccessKey accessKey) {
-                  HistoryUtils.newHistory(ShowDistributedInstance.RESOLVER, distributedInstance.getId());
+                  HistoryUtils.newHistory(   ShowDistributedInstance.RESOLVER, distributedInstance.getId());
                   AccessKeyDialogs.showAccessKeyDialog(messages.accessKeyLabel(), accessKey,
                     new NoAsyncCallback<Boolean>() {
                       @Override
@@ -127,6 +127,6 @@
   }
 
   private void cancel() {
-    HistoryUtils.newHistory(DistributedInstancesManagement.RESOLVER);
+    HistoryUtils.newHistory(   DistributedInstancesManagement.RESOLVER);
   }
 }
